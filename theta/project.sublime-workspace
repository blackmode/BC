{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Z",
				"z"
			],
			[
				"con",
				"console"
			],
			[
				"VIDEO",
				"video"
			],
			[
				"get",
				"get_key"
			],
			[
				"is_f",
				"is_float"
			],
			[
				"Exe",
				"ExecuteS"
			],
			[
				"contr",
				"controller"
			],
			[
				"id",
				"id_form"
			],
			[
				"pro",
				"program"
			],
			[
				"Svo",
				"Svoz_odpadu"
			],
			[
				"mar",
				"margin-top"
			],
			[
				"fil",
				"file_id"
			],
			[
				"login",
				"login_controller"
			],
			[
				"puri",
				"purifyHTML"
			],
			[
				"metho",
				"method_exists"
			],
			[
				"sender",
				"sender_email"
			],
			[
				"opt",
				"option	Tag"
			],
			[
				"is_s",
				"is_string"
			],
			[
				"ma",
				"margin-right"
			],
			[
				"margin",
				"margin-left"
			],
			[
				"name",
				"name_form"
			],
			[
				"josn",
				"json_encode"
			],
			[
				"loca",
				"location"
			],
			[
				"ac",
				"action	Attr"
			],
			[
				"co",
				"console"
			],
			[
				"val",
				"value"
			],
			[
				"over",
				"override_file"
			],
			[
				"mo",
				"module"
			],
			[
				"acti",
				"activation"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"me",
				"method_exists"
			],
			[
				"setcookie",
				"setcookie"
			],
			[
				"border-bo",
				"border-bottom-style"
			],
			[
				"mari",
				"margin-top"
			],
			[
				"str_rep",
				"str_replace"
			],
			[
				"prepro",
				"preprocessing"
			],
			[
				"identi",
				"identifier"
			],
			[
				"array_",
				"array_keys"
			],
			[
				"favicon",
				"favicon_file"
			],
			[
				"is",
				"is_array"
			],
			[
				"camel",
				"camelToUnderScore"
			],
			[
				"is_a",
				"is_array"
			],
			[
				"jso",
				"json_encode"
			],
			[
				"ajax",
				"ajax_method"
			],
			[
				"post",
				"postProcess"
			],
			[
				"TH",
				"throw"
			],
			[
				"se",
				"select_options"
			],
			[
				"fi",
				"fields_form"
			],
			[
				"cen",
				"cena_produktu"
			],
			[
				"c",
				"class	Attr"
			],
			[
				"pa",
				"padding-top"
			],
			[
				"upda",
				"updateValue"
			],
			[
				"els",
				"else"
			],
			[
				"fade",
				"fadeOut"
			],
			[
				"poklad",
				"pokladna_tlacitko"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"ELSE",
				"elseif"
			],
			[
				"table",
				"table_creation"
			],
			[
				"this",
				"this_file"
			],
			[
				"css",
				"css_files"
			],
			[
				"var",
				"var_dump"
			],
			[
				"p",
				"product"
			],
			[
				"array_m",
				"array_merge"
			],
			[
				"defi",
				"defined"
			],
			[
				"DELETE",
				"delete"
			],
			[
				"PREFI",
				"PREFIX_METHOD"
			],
			[
				"fun",
				"function"
			],
			[
				"fu",
				"function"
			],
			[
				"tem",
				"template_pointer"
			],
			[
				"conte",
				"Context"
			],
			[
				"module",
				"module_name"
			],
			[
				"Co",
				"Context"
			],
			[
				"tho",
				"throw	Throw Exception"
			],
			[
				"array_di",
				"array_diff"
			],
			[
				"_",
				"__construct"
			],
			[
				"unse",
				"unset"
			],
			[
				"wid",
				"width"
			],
			[
				"confi",
				"Configuration"
			],
			[
				"debu",
				"debug_print_backtrace"
			],
			[
				"tex",
				"text-decoration"
			],
			[
				"fo",
				"font-weight"
			],
			[
				"preg",
				"preg_match_all"
			],
			[
				"DI",
				"DIRECTORY_SEPARATOR"
			],
			[
				"ignore",
				"ignoreFiles"
			],
			[
				"diff",
				"diff_file"
			],
			[
				"session_de",
				"session_destroy"
			],
			[
				"preg_mat",
				"preg_match"
			],
			[
				"for",
				"foreach	foreach â€¦"
			],
			[
				"vers",
				"versionFile"
			],
			[
				"updat",
				"updateValues"
			],
			[
				"json",
				"json_encode"
			],
			[
				"dele",
				"deleteByName"
			],
			[
				"ti",
				"time_limit"
			],
			[
				"time",
				"time_start"
			],
			[
				"print",
				"print_r"
			],
			[
				"cont",
				"controller"
			],
			[
				"pos",
				"positions"
			],
			[
				"font",
				"font-size"
			],
			[
				"Aktualiz",
				"aktualizace"
			],
			[
				"id_",
				"id_product"
			],
			[
				"strs",
				"strstr"
			],
			[
				"rgb",
				"rgba()"
			],
			[
				"di",
				"display"
			],
			[
				"te",
				"text-align"
			],
			[
				"pad",
				"padding-top"
			],
			[
				"fon",
				"font-size"
			],
			[
				"bac",
				"background-color"
			],
			[
				"bor",
				"border-right"
			],
			[
				"session",
				"session_start"
			],
			[
				"str_re",
				"str_replace"
			],
			[
				"s",
				"style	Attr"
			],
			[
				"iss",
				"isset"
			],
			[
				"setter",
				"setter_keys"
			],
			[
				"exp",
				"explode"
			],
			[
				"auto",
				"auto_increment"
			],
			[
				"nam",
				"nameOfHook"
			],
			[
				"strto",
				"strtolower"
			],
			[
				"preg_ma",
				"preg_match"
			],
			[
				"is_nu",
				"is_numeric"
			],
			[
				"preg_match",
				"preg_match_all"
			]
		]
	},
	"buffers":
	[
		{
			"file": "base/index.html",
			"settings":
			{
				"buffer_size": 3678,
				"line_ending": "Windows"
			}
		},
		{
			"file": "theta6.html",
			"settings":
			{
				"buffer_size": 7675,
				"line_ending": "Windows"
			}
		},
		{
			"file": "theta5.html",
			"settings":
			{
				"buffer_size": 7496,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/index.html",
			"settings":
			{
				"buffer_size": 2201,
				"line_ending": "Unix"
			}
		},
		{
			"file": "theta.html",
			"settings":
			{
				"buffer_size": 7791,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/FashionMalls/admin/themes/theme1/content.html",
			"settings":
			{
				"buffer_size": 963,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/THETA_GL-master/js/theta_gl.js",
			"settings":
			{
				"buffer_size": 11106,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/panoramaview/glass.js",
			"settings":
			{
				"buffer_size": 9271,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/panoramaview/pano.js",
			"settings":
			{
				"buffer_size": 2476,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/panoramaview/sanegl.js",
			"settings":
			{
				"buffer_size": 10696,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/webgl-lessons/lesson11/index.html",
			"settings":
			{
				"buffer_size": 16413,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/webgl-demo.js",
			"settings":
			{
				"buffer_size": 12912,
				"line_ending": "Unix"
			}
		},
		{
			"file": "gl-matrix-2.2.1.js",
			"settings":
			{
				"buffer_size": 110352,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/HPCZ/Desktop/BC-c++/howto_webgl.txt",
			"settings":
			{
				"buffer_size": 11059,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/BC/shaders/vertext/equirectangular.vert",
			"settings":
			{
				"buffer_size": 313,
				"line_ending": "Windows",
				"name": "#version 150"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/webgl-lessons/js/webgl-utils.js",
			"settings":
			{
				"buffer_size": 5771,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\nwindow.libpannellum = (function(window, document, undefined) {\n\n'use strict';\n\n/* Image Type argument can be that of \"equirectangular\" or \"cubemap\".\n * If \"cubemap\" is used, the image argument should be an array of images\n * instead of a single image.  They should be the order of:\n * +z, +x, -z, -x, +y, -y.\n */\nfunction Renderer(container, image, imageType, video) {\n    this.container = container;\n    this.canvas = document.createElement('canvas');\n    this.container.appendChild(this.canvas);\n    this.image = image;\n    this.video = video;\n\n    // Default argument for image type\n    this.imageType = 'equirectangular';\n    if (typeof imageType != 'undefined'){\n        this.imageType = imageType;\n    }\n\n    var program, gl;\n    var fallbackImgSize;\n\n    this.init = function(haov, vaov, voffset, callback) {\n        var s;\n        \n        // This awful browser specific test exists because iOS 8 and IE 11\n        // don't display non-power-of-two cubemap textures but also don't\n        // throw an error (tested on an iPhone 5c / iOS 8.1.3). Therefore, the\n        // WebGL context is never created for these browsers for NPOT cubemaps,\n        // and the CSS 3D transform fallback renderer is used instead.\n        if (!(this.imageType == 'cubemap' &&\n            (this.image[0].width & (this.image[0].width - 1)) !== 0 &&\n            (navigator.userAgent.toLowerCase().match(/(iphone|ipod|ipad).* os 8_/) ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./)))) {\n            // Enable WebGL on canvas\n            gl = this.canvas.getContext('experimental-webgl', {alpha: false, depth: false});\n        }\n        \n        // If there is no WebGL, fall back to CSS 3D transform renderer.\n        // While browser specific tests are usually frowned upon, the\n        // fallback viewer only really works with WebKit/Blink and IE 10/11\n        // (it doesn't work properly in Firefox).\n        if (!gl && ((this.imageType == 'multires' && this.image.fallbackPath) ||\n            this.imageType == 'cubemap') &&\n            ('WebkitAppearance' in document.documentElement.style ||\n            navigator.userAgent.match(/Trident.*rv[ :]*11\\./) ||\n            navigator.appVersion.indexOf('MSIE 10') !== -1)) {\n            // Remove old world if it exists\n            if (this.world) {\n                this.container.removeChild(this.world);\n            }\n            \n            // Initialize renderer\n            this.world = document.createElement('div');\n            this.world.className = 'world';\n            \n            // Add images\n            var path = this.image.basePath + this.image.fallbackPath;\n            var sides = ['f', 'r', 'b', 'l', 'u', 'd'];\n            var loaded = 0;\n            var world = this.world;\n            var container = this.container;\n            var onLoad = function() {\n                // Draw image on canvas\n                var faceCanvas = document.createElement('canvas');\n                faceCanvas.className = 'face ' + sides[this.side] + 'face';\n                world.appendChild(faceCanvas);\n                var faceContext = faceCanvas.getContext('2d');\n                faceCanvas.style.width = this.width + 4 + 'px';\n                faceCanvas.style.height = this.height + 4 + 'px';\n                faceCanvas.width = this.width + 4;\n                faceCanvas.height = this.height + 4;\n                faceContext.drawImage(this, 2, 2);\n                var imgData = faceContext.getImageData(0, 0, faceCanvas.width, faceCanvas.height);\n                var data = imgData.data;\n                \n                // Duplicate edge pixels\n                var i;\n                var j;\n                for (i = 2; i < faceCanvas.width - 2; i++) {\n                    for (j = 0; j < 4; j++) {\n                        data[(i + faceCanvas.width) * 4 + j] = data[(i + faceCanvas.width * 2) * 4 + j];\n                        data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 3)) * 4 + j];\n                    }\n                }\n                for (i = 2; i < faceCanvas.height - 2; i++) {\n                    for (j = 0; j < 4; j++) {\n                        data[(i * faceCanvas.width + 1) * 4 + j] = data[(i * faceCanvas.width + 2) * 4 + j];\n                        data[((i + 1) * faceCanvas.width - 2) * 4 + j] = data[((i + 1) * faceCanvas.width - 3) * 4 + j];\n                    }\n                }\n                for (j = 0; j < 4; j++) {\n                    data[(faceCanvas.width + 1) * 4 + j] = data[(faceCanvas.width * 2 + 2) * 4 + j];\n                    data[(faceCanvas.width * 2 - 2) * 4 + j] = data[(faceCanvas.width * 3 - 3) * 4 + j];\n                    data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 3) + 2) * 4 + j];\n                    data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) - 3) * 4 + j];\n                }\n                for (i = 1; i < faceCanvas.width - 1; i++) {\n                    for (j = 0; j < 4; j++) {\n                        data[i * 4 + j] = data[(i + faceCanvas.width) * 4 + j];\n                        data[(i + faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(i + faceCanvas.width * (faceCanvas.height - 2)) * 4 + j];\n                    }\n                }\n                for (i = 1; i < faceCanvas.height - 1; i++) {\n                    for (j = 0; j < 4; j++) {\n                        data[(i * faceCanvas.width) * 4 + j] = data[(i * faceCanvas.width + 1) * 4 + j];\n                        data[((i + 1) * faceCanvas.width - 1) * 4 + j] = data[((i + 1) * faceCanvas.width - 2) * 4 + j];\n                    }\n                }\n                for (j = 0; j < 4; j++) {\n                    data[j] = data[(faceCanvas.width + 1) * 4 + j];\n                    data[(faceCanvas.width - 1) * 4 + j] = data[(faceCanvas.width * 2 - 2) * 4 + j];\n                    data[(faceCanvas.width * (faceCanvas.height - 1)) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 2) + 1) * 4 + j];\n                    data[(faceCanvas.width * faceCanvas.height - 1) * 4 + j] = data[(faceCanvas.width * (faceCanvas.height - 1) - 2) * 4 + j];\n                }\n                \n                // Draw image width duplicated edge pixels on canvas\n                faceContext.putImageData(imgData, 0, 0);\n                \n                loaded++;\n                if (loaded == 6) {\n                    fallbackImgSize = this.width;\n                    container.appendChild(world);\n                    callback();\n                }\n            };\n            for (s = 0; s < 6; s++) {\n                var faceImg = new Image();\n                faceImg.crossOrigin = 'anonymous';\n                faceImg.side = s;\n                faceImg.onload = onLoad;\n                if (this.imageType == 'multires') {\n                    faceImg.src = path.replace('%s',sides[s]) + '.' + this.image.extension;\n                } else {\n                    faceImg.src = this.image[s].src;\n                }\n            }\n            \n            return;\n        } else if (!gl) {\n            console.log('Error: no WebGL support detected!');\n            throw {type: 'no webgl'};\n        }\n        if (this.image.basePath) {\n            this.image.fullpath = this.image.basePath + this.image.path;\n        } else {\n            this.image.fullpath = this.image.path;\n        }\n        this.image.invTileResolution = 1 / this.image.tileResolution;\n        \n \n        // Make sure image isn't too big\n        var width, maxWidth;\n        if (this.imageType == 'equirectangular') {\n            width = Math.max(this.image.width, this.image.height);\n            maxWidth = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n            if (width > maxWidth) {\n                console.log('Error: The image is too big; it\\'s ' + width + 'px wide, but this device\\'s maximum supported width is ' + maxWidth + 'px.');\n                throw {type: 'webgl size error', width: width, maxWidth: maxWidth};\n            }\n        } else if (this.imageType == 'cubemap') {\n            width = this.image[0].width;\n            maxWidth = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n            if (width > maxWidth) {\n                console.log('Error: The cube face image is too big; it\\'s ' + width + 'px wide, but this device\\'s maximum supported width is ' + maxWidth + 'px.');\n                throw {type: 'webgl size error', width: width, maxWidth: maxWidth};\n            }\n        }\n        \n        // Set 2d texture binding\n        var glBindType = gl.TEXTURE_2D;\n\n        // Create viewport for entire canvas\n        gl.viewport(0, 0, this.canvas.width, this.canvas.height);   \n\n        // Create vertex shader\n        var vs = gl.createShader(gl.VERTEX_SHADER);\n        var vertexSrc = v;\n        if (this.imageType == 'multires') {\n            vertexSrc = vMulti;\n        }\n        gl.shaderSource(vs, vertexSrc);\n        gl.compileShader(vs);\n        \n        // Create fragment shader\n        var fs = gl.createShader(gl.FRAGMENT_SHADER);\n        var fragmentSrc = fragEquirectangular;\n        gl.shaderSource(fs, fragmentSrc);\n        gl.compileShader(fs);\n        \n        // Link WebGL program\n        program = gl.createProgram();\n        gl.attachShader(program, vs);\n        gl.attachShader(program, fs);\n        gl.linkProgram(program);\n        \n        // Log errors\n        if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) \n            console.log(gl.getShaderInfoLog(vs));\n        if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS))\n            console.log(gl.getShaderInfoLog(fs));\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS))\n            console.log(gl.getProgramInfoLog(program));\n        \n        // Use WebGL program\n        gl.useProgram(program);\n        \n        program.drawInProgress = false;\n        \n        // Look up texture coordinates location\n        program.texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\n        gl.enableVertexAttribArray(program.texCoordLocation);\n        \n////////////////////\n\n        if (this.imageType != 'multires') {\n            // Provide texture coordinates for rectangle\n            program.texCoordBuffer = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, program.texCoordBuffer);\n\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1,1,1,1,1,-1,-1,1,1,-1,-1,-1]), gl.STATIC_DRAW);\n            gl.vertexAttribPointer(program.texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n            \n            // Pass aspect ratio\n            program.aspectRatio = gl.getUniformLocation(program, 'u_aspectRatio');\n            gl.uniform1f(program.aspectRatio, this.canvas.width / this.canvas.height);\n            \n            // Locate psi, theta, focal length, horizontal extent, vertical extent, and vertical offset\n            program.psi = gl.getUniformLocation(program, 'u_psi');\n            program.theta = gl.getUniformLocation(program, 'u_theta');\n            program.f = gl.getUniformLocation(program, 'u_f');\n            program.h = gl.getUniformLocation(program, 'u_h');\n            program.v = gl.getUniformLocation(program, 'u_v');\n            program.vo = gl.getUniformLocation(program, 'u_vo');\n            \n            // Pass horizontal extent, vertical extent, and vertical offset\n            gl.uniform1f(program.h, haov / (Math.PI * 2.0));\n            gl.uniform1f(program.v, vaov / Math.PI);\n            gl.uniform1f(program.vo, voffset / Math.PI);\n            \n            // Create texture\n            program.texture = gl.createTexture();\n            gl.bindTexture(glBindType, program.texture);\n            \n            // Upload images to texture depending on type\n            if (this.imageType == 'cubemap') {\n                // Load all six sides of the cube map\n                gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, this.image[1]);\n                gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, this.image[3]);\n                gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, this.image[4]);\n                gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, this.image[5]);\n                gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, this.image[0]);\n                gl.texImage2D(gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, this.image[2]);\n            } else {\n                // Upload image to the texture\n                gl.texImage2D(glBindType, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, this.image);\n            }\n            \n            // Set parameters for rendering any size\n            gl.texParameteri(glBindType, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(glBindType, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(glBindType, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(glBindType, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            \n        } else {\n            // Look up vertex coordinates location\n         /*program.vertPosLocation = gl.getAttribLocation(program, 'a_vertCoord');\n            gl.enableVertexAttribArray(program.vertPosLocation);\n            \n            // Create buffers\n            program.cubeVertBuf = gl.createBuffer();\n            program.cubeVertTexCoordBuf = gl.createBuffer();\n            program.cubeVertIndBuf = gl.createBuffer();\n            \n            // Bind texture coordinate buffer and pass coordinates to WebGL\n            gl.bindBuffer(gl.ARRAY_BUFFER, program.cubeVertTexCoordBuf);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0,0,1,0,1,1,0,1]), gl.STATIC_DRAW);\n            \n            // Bind square index buffer and pass indicies to WebGL\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, program.cubeVertIndBuf);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([0,1,2,0,2,3]), gl.STATIC_DRAW);\n            \n            // Find uniforms\n            program.perspUniform = gl.getUniformLocation(program, 'u_perspMatrix');\n            program.cubeUniform = gl.getUniformLocation(program, 'u_cubeMatrix');\n            //program.colorUniform = gl.getUniformLocation(program, 'u_color');\n            \n            program.level = -1;\n            \n            program.currentNodes = [];\n            program.nodeCache = [];\n          */  program.nodeCacheTimestamp = 0;\n        }\n        \n        // Check if there was an error\n        if (gl.getError() !== 0) {\n            console.log('Error: Something went wrong with WebGL!');\n            throw {type: 'webgl error'};\n        }\n        \n        callback();\n    };\n\n    this.destroy = function() {\n        if (this.container !== undefined) {\n            if (this.canvas !== undefined) {\n                this.container.removeChild(this.canvas);\n            }\n            if (this.world !== undefined) {\n                this.container.removeChild(this.world);\n            }\n        }\n    };\n\n    this.resize = function() {\n        this.canvas.width = this.container.offsetWidth;\n        this.canvas.height = this.container.offsetHeight;\n        if (gl) {\n            gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n            if (this.imageType != 'multires') {\n                gl.uniform1f(program.aspectRatio, this.canvas.width / this.canvas.height);\n            }\n        }\n    }\n\n    this.render = function(pitch, yaw, hfov, returnImage) {\n        var focal, i, s;\n        \n \n        if (this.imageType != 'multires') {\n            // Calculate focal length from vertical field of view\n            var vfov = 2 * Math.atan(Math.tan(hfov * 0.5) / (this.canvas.width / this.canvas.height));\n            focal = 1 / Math.tan(vfov * 0.5);\n            \n            // Pass psi, theta, and focal length\n            gl.uniform1f(program.psi, yaw);\n            gl.uniform1f(program.theta, pitch);\n            gl.uniform1f(program.f, focal);\n            \n            if (this.video === true) {\n                // Update texture if video\n                if (this.imageType == 'equirectangular') {\n                    gl.bindTexture(gl.TEXTURE_2D, program.texture);\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, this.image);\n                }\n            }\n            \n            // Draw using current buffer\n            gl.drawArrays(gl.TRIANGLES, 0, 6);\n        \n        } \n        \n        if (returnImage !== undefined) {\n            return this.canvas.toDataURL('image/png');\n        }\n    };\n    \n    this.isLoading = function() {\n        if (gl && this.imageType == 'multires') {\n            for ( var i = 0; i < program.currentNodes.length; i++ ) {\n                if (!program.currentNodes[i].textureLoaded) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    \n \n \n \n\n\n    this.setImage = function(image) {\n        this.image = image;\n        this.init();\n    };\n    \n    this.setCanvas = function(canvas) {\n        this.canvas = canvas;\n        this.init();\n    };\n    \n \n \n    \n \n \n \n    this.processLoadedTexture = function(img, tex) {\n        gl.bindTexture(gl.TEXTURE_2D, tex);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, img);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n    };\n    \n    this.processNextTile = function(node) {\n        if (!node.texture) {\n        node.texture = gl.createTexture();\n        node.image = new Image();\n        node.image.crossOrigin = 'anonymous';\n        var self = this;\n        node.image.onload = function() {\n            self.processLoadedTexture(node.image, node.texture);\n            node.textureLoaded = true;\n        };\n        node.image.src = node.path + '.' + this.image.extension;\n        }\n    };\n    \n    this.checkZoom = function(hfov) {\n        // Find optimal level\n        var newLevel = 1;\n        while ( newLevel < this.image.maxLevel &&\n            this.canvas.width > this.image.tileResolution *\n            Math.pow(2, newLevel - 1) * Math.tan(hfov / 2) * 0.707 ) {\n            newLevel++;\n        }\n        \n        // Apply change\n        program.level = newLevel;\n    };\n    \n    // perspective matrix, rotation matrix\n    this.rotatePersp = function(p, r) {\n        return [\n            p[ 0]*r[0], p[ 0]*r[1], p[ 0]*r[ 2],     0,\n            p[ 5]*r[4], p[ 5]*r[5], p[ 5]*r[ 6],     0,\n            p[10]*r[8], p[10]*r[9], p[10]*r[10], p[11],\n                 -r[8],      -r[9],      -r[10],     0\n        ];\n    };\n    \n    // rotated perspective matrix, vec3 (last element is inverted)\n    this.applyRotPerspToVec = function(m, v) {\n        return [\n                    m[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2],\n                    m[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2],\n            m[11] + m[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2],\n                 1/(m[12]*v[0] + m[13]*v[1] + m[14]*v[2])\n        ];\n    };\n    \n    this.checkInView = function(m, v) {\n        var vpp = this.applyRotPerspToVec(m, v);\n        var winX = vpp[0]*vpp[3];\n        var winY = vpp[1]*vpp[3];\n        var winZ = vpp[2]*vpp[3];\n        var ret = [0, 0, 0];\n        \n        if ( winX < -1 )\n            ret[0] = -1;\n        if ( winX > 1 )\n            ret[0] = 1;\n        if ( winY < -1 )\n            ret[1] = -1;\n        if ( winY > 1 )\n            ret[1] = 1;\n        if ( winZ < -1 || winZ > 1 )\n            ret[2] = 1;\n        return ret;\n    };\n    \n    this.checkSquareInView = function(m, v) {\n        var check1 = this.checkInView(m, v.slice(0, 3));\n        var check2 = this.checkInView(m, v.slice(3, 6));\n        var check3 = this.checkInView(m, v.slice(6, 9));\n        var check4 = this.checkInView(m, v.slice(9, 12));\n        var testX = check1[0] + check2[0] + check3[0] + check4[0];\n        if ( testX == -4 || testX == 4 )\n            return false;\n        var testY = check1[1] + check2[1] + check3[1] + check4[1];\n        if ( testY == -4 || testY == 4 )\n            return false;\n        var testZ = check1[2] + check2[2] + check3[2] + check4[2];\n        if ( testZ == 4 )\n            return false;\n        \n        return true;\n    };\n}\n\n// Vertex shader for equirectangular and cube\nvar v = [\n'attribute vec2 a_texCoord;',\n'varying vec2 v_texCoord;',\n\n'void main() {',\n    // Set position\n    'gl_Position = vec4(a_texCoord, 0.0, 1.0);',\n    \n    // Pass the coordinates to the fragment shader\n    'v_texCoord = a_texCoord;',\n'}'\n].join('');\n\n \n\n \n\n// Fragment shader\nvar fragEquirectangular = [\n'precision mediump float;',\n\n'uniform float u_aspectRatio;',\n'uniform float u_psi;',\n'uniform float u_theta;',\n'uniform float u_f;',\n'uniform float u_h;',\n'uniform float u_v;',\n'uniform float u_vo;',\n\n'const float PI = 3.14159265358979323846264;',\n\n// Texture\n'uniform sampler2D u_image;',\n\n// Coordinates passed in from vertex shader\n'varying vec2 v_texCoord;',\n\n'void main() {',\n    // Map canvas/camera to sphere\n    'float x = v_texCoord.x * u_aspectRatio;',\n    'float y = v_texCoord.y;',\n    'float sintheta = sin(u_theta);',\n    'float costheta = cos(u_theta);',\n    'float a = u_f * costheta - y * sintheta;',\n    'float root = sqrt(x * x + a * a);',\n    'float lambda = atan(x / root, a / root) + u_psi;',\n    'float phi = atan((y * costheta + u_f * sintheta) / root);',\n\n    // Wrap image\n    'if(lambda > PI)',\n        'lambda = lambda - PI * 2.0;',\n    'if(lambda < -PI)',\n       'lambda = lambda + PI * 2.0;',\n    \n    // Map texture to sphere\n    'vec2 coord = vec2(lambda / PI, phi / (PI / 2.0));',\n    \n    // Look up color from texture\n    // Map from [-1,1] to [0,1] and flip y-axis\n    'if(coord.x < -u_h || coord.x > u_h || coord.y < -u_v + u_vo || coord.y > u_v + u_vo)',\n        'gl_FragColor = vec4(0, 0, 0, 1.0);',\n    'else',\n        'gl_FragColor = texture2D(u_image, vec2((coord.x + u_h) / (u_h * 2.0), (-coord.y + u_v + u_vo) / (u_v * 2.0)));',\n'}'\n].join('\\n');\n\n \n\nreturn {\n    renderer: function(canvas, image, imagetype, video) {\n        return new Renderer(canvas, image, imagetype, video);\n    }\n};\n\n})(window, document);",
			"settings":
			{
				"buffer_size": 22484,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/*\n * Pannellum - An HTML5 based Panorama Viewer\n * Copyright (c) 2011-2015 Matthew Petroff\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n'use strict';\n\n// Declare variables\nvar config,\n    tourConfig = {},\n    configFromURL,\n    renderer,\n    oldRenderer,\n    preview,\n    container = document.getElementById('container'),\n    isUserInteracting = false,\n    latestInteraction = Date.now(),\n    onPointerDownPointerX = 0,\n    onPointerDownPointerY = 0,\n    onPointerDownPointerDist = -1,\n    onPointerDownYaw = 0,\n    onPointerDownPitch = 0,\n    keysDown = new Array(10),\n    fullscreenActive = false,\n    loaded = false,\n    error = false,\n    isTimedOut = false,\n    listenersAdded = false,\n    panoImage,\n    prevTime,\n    yawSpeed = 0,\n    pitchSpeed = 0,\n    zoomSpeed = 0,\n    animating = false,\n    hotspotsCreated = false;\n\nvar defaultConfig = {\n    hfov: 100,\n    minHfov: 50,\n    maxHfov: 120,\n    pitch: 0,\n    minPitch: -85,\n    maxPitch: 85,\n    yaw: 0,\n    minYaw: -360,\n    maxYaw: 360,\n    haov: 360,\n    vaov: 180,\n    vOffset: 0,\n    autoRotate: false,\n    autoRotateInactivityDelay: -1,\n    type: 'equirectangular',\n    northOffset: 0,\n    showFullscreenCtrl: true,\n    video: false,\n    keyboardZoom: true\n};\n\ncontainer.className += ' container';\n\n// Display about information on right click\nvar aboutMsg = document.createElement('span');\naboutMsg.className = 'about_msg';\naboutMsg.innerHTML = '<a href=\"http://pannellum.org/\" target=\"_blank\">Pannellum</a>';\ncontainer.appendChild(aboutMsg);\ndocument.addEventListener('contextmenu', onRightClick);\n\n\n// Create container for renderer\nvar renderContainer = document.createElement('div');\nrenderContainer.className = 'render_container';\ncontainer.appendChild(renderContainer);\nvar dragFix = document.createElement('div');\ndragFix.className = 'dragfix';\ncontainer.appendChild(dragFix);\n\n\n// Create info display\nvar infoDisplay = {};\n\n// Panorama info\ninfoDisplay.container = document.createElement('div');\ninfoDisplay.container.className = 'panorama_info';\ninfoDisplay.title = document.createElement('div');\ninfoDisplay.title.className = 'title_box';\ninfoDisplay.container.appendChild(infoDisplay.title);\ninfoDisplay.author = document.createElement('div');\ninfoDisplay.author.className = 'author_box';\ninfoDisplay.container.appendChild(infoDisplay.author);\ncontainer.appendChild(infoDisplay.container);\n\n// Load box\ninfoDisplay.load = {};\ninfoDisplay.load.box = document.createElement('div');\ninfoDisplay.load.box.className = 'load_box';\ninfoDisplay.load.box.innerHTML = '<p>Loading...</p>';\ninfoDisplay.load.lbox = document.createElement('div');\ninfoDisplay.load.lbox.className = 'lbox';\ninfoDisplay.load.lbox.innerHTML = '<div class=\"loading\"></div>';\ninfoDisplay.load.box.appendChild(infoDisplay.load.lbox);\ninfoDisplay.load.lbar = document.createElement('div');\ninfoDisplay.load.lbar.className = 'lbar';\ninfoDisplay.load.lbarFill = document.createElement('div');\ninfoDisplay.load.lbarFill.className = 'lbar_fill';\ninfoDisplay.load.lbar.appendChild(infoDisplay.load.lbarFill);\ninfoDisplay.load.box.appendChild(infoDisplay.load.lbar);\ninfoDisplay.load.msg = document.createElement('p');\ninfoDisplay.load.msg.className = 'lmsg';\ninfoDisplay.load.box.appendChild(infoDisplay.load.msg);\ncontainer.appendChild(infoDisplay.load.box);\n\n// Error message\ninfoDisplay.errorMsg = document.createElement('div');\ninfoDisplay.errorMsg.className = 'error_msg infobox';\ncontainer.appendChild(infoDisplay.errorMsg);\n\n\n// Create controls\nvar controls = {};\n\n// Load button\ncontrols.load = document.createElement('div');\ncontrols.load.className = 'load_button';\ncontrols.load.innerHTML = '<p>Click to<br>Load<br>Panorama<p>';\ncontrols.load.addEventListener('click', load);\ncontainer.appendChild(controls.load);\n\n// Zoom controls\ncontrols.zoom = document.createElement('div');\ncontrols.zoom.className = 'zoom_controls controls';\ncontrols.zoomIn = document.createElement('div');\ncontrols.zoomIn.className = 'zoom_in sprite control';\ncontrols.zoomIn.addEventListener('click', zoomIn);\ncontrols.zoom.appendChild(controls.zoomIn);\ncontrols.zoomOut = document.createElement('div');\ncontrols.zoomOut.className = 'zoom_out sprite control';\ncontrols.zoomOut.addEventListener('click', zoomOut);\ncontrols.zoom.appendChild(controls.zoomOut);\ncontainer.appendChild(controls.zoom);\n\n// Fullscreen toggle\ncontrols.fullscreen = document.createElement('div');\ncontrols.fullscreen.addEventListener('click', toggleFullscreen);\ncontrols.fullscreen.className = 'fullscreentoggle_button sprite fullscreentoggle_button_inactive controls control';\ncontainer.appendChild(controls.fullscreen);\n\n// Compass\nvar compass = document.createElement('div');\ncompass.className = 'compass controls control';\ncontainer.appendChild(compass);\n\n// Process options\nparseURLParameters();\n\n// Initialize viewer\nfunction init() {\n    // Display an error for IE 9 as it doesn't work but also doesn't otherwise\n    // show an error (older versions don't work at all)\n    // Based on: http://stackoverflow.com/a/10965203\n    var div = document.createElement(\"div\");\n    div.innerHTML = \"<!--[if lte IE 9]><i></i><![endif]-->\";\n    if (div.getElementsByTagName(\"i\").length == 1) {\n        anError();\n    }\n    \n    var i, p;\n    \n    if (config.type == 'cubemap') {\n        panoImage = [];\n        for (i = 0; i < 6; i++) {\n            panoImage.push(new Image());\n            panoImage[i].crossOrigin = 'anonymous';\n        }\n        infoDisplay.load.lbox.style.display = 'block';\n        infoDisplay.load.lbar.style.display = 'none';\n    } else if (config.type == 'multires') {\n        var c = JSON.parse(JSON.stringify(config.multiRes));    // Deep copy\n        if (config.basePath) {\n            c.basePath = config.basePath + config.multiRes.basePath;\n        } else if (tourConfig.basePath) {\n            c.basePath = tourConfig.basePath + config.multiRes.basePath;\n        }\n        panoImage = c;\n    } else {\n        if (config.video === true) {\n            panoImage = document.createElement('video');\n            infoDisplay.load.lbox.style.display = 'block';\n            infoDisplay.load.lbar.style.display = 'none';\n        } else {\n            panoImage = new Image();\n        }\n    }\n    \n    function onImageLoad() {\n        renderer = new libpannellum.renderer(renderContainer, panoImage, config.type, config.video);\n        \n        // Only add event listeners once\n        if (!listenersAdded) {\n            listenersAdded = true;\n            document.addEventListener('mousedown', onDocumentMouseDown, false);\n            document.addEventListener('mousemove', onDocumentMouseMove, false);\n            document.addEventListener('mouseup', onDocumentMouseUp, false);\n            document.addEventListener('mousewheel', onDocumentMouseWheel, false);\n            document.addEventListener('DOMMouseScroll', onDocumentMouseWheel, false);\n            document.addEventListener('onresize', onDocumentResize, false);\n            document.addEventListener('mozfullscreenchange', onFullScreenChange, false);\n            document.addEventListener('webkitfullscreenchange', onFullScreenChange, false);\n            document.addEventListener('msfullscreenchange', onFullScreenChange, false);\n            document.addEventListener('fullscreenchange', onFullScreenChange, false);\n            window.addEventListener('resize', onDocumentResize, false);\n            document.addEventListener('keydown', onDocumentKeyPress, false);\n            document.addEventListener('keyup', onDocumentKeyUp, false);\n            window.addEventListener('blur', clearKeys, false);\n            document.addEventListener('mouseout', onDocumentMouseUp, false);\n            document.addEventListener('touchstart', onDocumentTouchStart, false);\n            document.addEventListener('touchmove', onDocumentTouchMove, false);\n            document.addEventListener('touchend', onDocumentTouchEnd, false);\n        }\n        \n        renderInit();\n        setTimeout(function(){isTimedOut = true;}, 500);\n    }\n    \n    // From http://stackoverflow.com/a/19709846\n    var absoluteURL = function(url) {\n        return RegExp('^(?:[a-z]+:)?//', 'i').test(url);\n    };\n    \n    // Configure image loading\n    if (config.type == 'cubemap') {\n        // Quick loading counter for synchronous loading\n        var itemsToLoad = 6;\n        \n        var onLoad = function() {\n            itemsToLoad--;\n            if (itemsToLoad === 0) {\n                onImageLoad();\n            }\n        };\n        \n        var onError = function(e) {\n            var a = document.createElement('a');\n            a.href = e.target.src;\n            a.innerHTML = a.href;\n            anError('The file ' + a.outerHTML + ' could not be accessed.');\n        };\n        \n        for (i = 0; i < panoImage.length; i++) {\n            panoImage[i].onload = onLoad;\n            panoImage[i].onerror = onError;\n            p = config.cubeMap[i];\n            if (config.basePath && !absoluteURL(p)) {\n                p = config.basePath + p;\n            } else if (tourConfig.basePath && !absoluteURL(p)) {\n                p = tourConfig.basePath + p;\n            }\n            panoImage[i].src = p;\n        }\n    } else if (config.type == 'multires') {\n        onImageLoad();\n    } else {\n        p = '';\n        if (config.basePath) {\n            p = config.basePath;\n        } else if (tourConfig.basePath) {\n            p = tourConfig.basePath;\n        }\n        \n        if (config.video === true) {\n            panoImage.addEventListener('loadeddata', function() {\n                panoImage.play();\n                onImageLoad();\n            });\n            for (i = 0; i < config.panoramas.length; i++) {\n                if (panoImage.canPlayType(config.panoramas[i].type).length > 0) {\n                    panoImage.crossOrigin = 'anonymous';\n                    panoImage.src = absoluteURL(config.panoramas[i].file) ? config.panoramas[i].file : p + config.panoramas[i].file;\n                    break;\n                }\n            }\n            if (panoImage.src.length < 1) {\n                // Browser doesn't support any provide video formats\n                console.log('Error: provided video formats are not supported');\n                anError('Your browser doesn\\'t support any of the provided' +\n                    ' video formats. Please try using a different browser or' +\n                    ' device.');\n            }\n        } else {\n            // Still image\n            p = absoluteURL(config.panorama) ? config.panorama : p + config.panorama;\n            \n            panoImage.onload = function() {\n                window.URL.revokeObjectURL(this.src);  // Clean up\n                onImageLoad();\n            };\n            \n            var xhr = new XMLHttpRequest();\n            xhr.onloadend = function() {\n                if (xhr.status != 200) {\n                    // Display error if image can't be loaded\n                    var a = document.createElement('a');\n                    a.href = p;\n                    a.innerHTML = a.href;\n                    anError('The file ' + a.outerHTML + ' could not be accessed.');\n                }\n                var img = this.response;\n                parseGPanoXMP(img);\n                infoDisplay.load.msg.innerHTML = '';\n            };\n            xhr.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    // Display progress\n                    var percent = e.loaded / e.total * 100;\n                    infoDisplay.load.lbarFill.style.width = percent + '%';\n                    var unit, numerator, denominator;\n                    if (e.total > 1e6) {\n                        unit = 'MB';\n                        numerator = (e.loaded / 1e6).toFixed(2);\n                        denominator = (e.total / 1e6).toFixed(2);\n                    } else if (e.total > 1e3) {\n                        unit = 'kB';\n                        numerator = (e.loaded / 1e3).toFixed(1);\n                        denominator = (e.total / 1e3).toFixed(1);\n                    } else {\n                        unit = 'B';\n                        numerator = e.loaded;\n                        denominator = e.total;\n                    }\n                    var msg = numerator + ' / ' + denominator + ' ' + unit;\n                    infoDisplay.load.msg.innerHTML = msg;\n                } else {\n                    // Display loading spinner\n                    infoDisplay.load.lbox.style.display = 'block';\n                    infoDisplay.load.lbar.style.display = 'none';\n                }\n            };\n            xhr.open('GET', p, true);\n            xhr.responseType = 'blob';\n            xhr.send();\n        }\n    }\n    \n    container.classList.add('grab');\n    container.classList.remove('grabbing');\n}\n\n// Parse Google Photo Sphere XMP Metadata\n// https://developers.google.com/photo-sphere/metadata/\nfunction parseGPanoXMP(image) {\n    var reader = new FileReader();\n    reader.addEventListener('loadend', function() {\n        var img = reader.result;\n        \n        var start = img.indexOf('<x:xmpmeta');\n        if (start > -1 && config.ignoreGPanoXMP !== true) {\n            var xmpData = img.substring(start, img.indexOf('</x:xmpmeta>') + 12);\n            \n            // Extract the requested tag from the XMP data\n            var getTag = function(tag) {\n                tag = xmpData.substring(xmpData.indexOf(tag + '=\"') + tag.length + 2);\n                tag = tag.substring(0, tag.indexOf('\"'));\n                if (tag.length === 0) {\n                    return null;\n                }\n                return Number(tag);\n            };\n            \n            // Relevant XMP data\n            var xmp = {\n                fullWidth: getTag('GPano:FullPanoWidthPixels'),\n                croppedWidth: getTag('GPano:CroppedAreaImageWidthPixels'),\n                fullHeight: getTag('GPano:FullPanoHeightPixels'),\n                croppedHeight: getTag('GPano:CroppedAreaImageHeightPixels'),\n                topPixels: getTag('GPano:CroppedAreaTopPixels'),\n                heading: getTag('GPano:PoseHeadingDegrees')\n            };\n            \n            if (xmp.fullWidth !== null && xmp.croppedWidth !== null &&\n                xmp.fullHeight !== null && xmp.croppedHeight !== null &&\n                xmp.topPixels !== null) {\n                \n                // Set up viewer using GPano XMP data\n                config.haov = xmp.croppedWidth / xmp.fullWidth * 360;\n                config.vaov = xmp.croppedHeight / xmp.fullHeight * 180;\n                config.vOffset = [(xmp.topPixels + xmp.croppedHeight / 2) / xmp.fullHeight - 0.5] * -90;\n                if (xmp.heading !== null) {\n                    // TODO: make sure this works correctly for partial panoramas\n                    config.northOffset = xmp.heading;\n                    config.compass = true;\n                }\n                \n                // TODO: add support for initial view settings\n            }\n        }\n        \n        // Load panorama\n        panoImage.src = window.URL.createObjectURL(image);\n    });\n    reader.readAsText(image);\n}\n\nfunction anError(error) {\n    if (error !== undefined) {\n        infoDisplay.errorMsg.innerHTML = '<p>' + error + '</p>';\n    } else {\n        infoDisplay.errorMsg.innerHTML = '<p>Your browser does not have the necessary WebGL support to display this panorama.</p>';\n    }\n    controls.load.style.display = 'none';\n    infoDisplay.load.box.style.display = 'none';\n    infoDisplay.errorMsg.style.display = 'table';\n    error = true;\n    renderContainer.style.display = 'none';\n}\n\nfunction clearError() {\n    infoDisplay.load.box.style.display = 'none';\n    infoDisplay.errorMsg.style.display = 'none';\n    error = false;\n}\n\nfunction onRightClick(event) {\n    aboutMsg.style.left = event.clientX + 'px';\n    aboutMsg.style.top = event.clientY + 'px';\n    clearTimeout(onRightClick.t1);\n    clearTimeout(onRightClick.t2);\n    aboutMsg.style.display = 'block';\n    aboutMsg.style.opacity = 1;\n    onRightClick.t1 = setTimeout(function() {aboutMsg.style.opacity = 0;}, 2000);\n    onRightClick.t2 = setTimeout(function() {aboutMsg.style.display = 'none';}, 2500);\n    event.preventDefault();\n}\n\nfunction onDocumentMouseDown(event) {\n    // Override default action\n    event.preventDefault();\n    // But not all of it\n    window.focus();\n    \n    // Only do something if the panorama is loaded\n    if (!loaded) {\n        return;\n    }\n    \n    // Log pitch / yaw of mouse click when debugging / placing hot spots\n    if (config.hotSpotDebug) {\n        var x = event.clientX / renderer.canvas.width * 2 - 1;\n        var y = (1 - event.clientY / renderer.canvas.height * 2) * renderer.canvas.height / renderer.canvas.width;\n        var focal = 1 / Math.tan(config.hfov * Math.PI / 360);\n        var s = Math.sin(config.pitch * Math.PI / 180);\n        var c = Math.cos(config.pitch * Math.PI / 180);\n        var a = focal * c - y * s;\n        var root = Math.sqrt(x*x + a*a)\n        var pitch = Math.atan((y * c + focal * s) / root) * 180 / Math.PI;\n        var yaw = Math.atan2(x / root, a / root) * 180 / Math.PI + config.yaw;\n        console.log('Pitch: ' + pitch + ', Yaw: ' + yaw);\n    }\n    \n    // Turn off auto-rotation if enabled\n    config.autoRotate = false;\n    \n    isUserInteracting = true;\n    latestInteraction = Date.now();\n    \n    onPointerDownPointerX = event.clientX;\n    onPointerDownPointerY = event.clientY;\n    \n    onPointerDownYaw = config.yaw;\n    onPointerDownPitch = config.pitch;\n    \n    container.classList.add('grabbing');\n    container.classList.remove('grab');\n    \n    animateInit();\n}\n\nfunction onDocumentMouseMove(event) {\n    if (isUserInteracting && loaded) {\n        latestInteraction = Date.now();\n        //TODO: This still isn't quite right\n        var yaw = ((Math.atan(onPointerDownPointerX / renderer.canvas.width * 2 - 1) - Math.atan(event.clientX / renderer.canvas.width * 2 - 1)) * 180 / Math.PI * config.hfov / 90) + onPointerDownYaw;\n        yawSpeed = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        \n        var vfov = 2 * Math.atan(Math.tan(config.hfov/360*Math.PI) * renderer.canvas.height / renderer.canvas.width) * 180 / Math.PI;\n        \n        var pitch = ((Math.atan(event.clientY / renderer.canvas.height * 2 - 1) - Math.atan(onPointerDownPointerY / renderer.canvas.height * 2 - 1)) * 180 / Math.PI * vfov / 90) + onPointerDownPitch;\n        pitchSpeed = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n    }\n}\n\nfunction onDocumentMouseUp() {\n    if (!isUserInteracting) {\n        return;\n    }\n    isUserInteracting = false;\n    if (Date.now() - latestInteraction > 15) {\n        // Prevents jump when user rapidly moves mouse, stops, and then\n        // releases the mouse button\n        pitchSpeed = yawSpeed = 0;\n    }\n    container.classList.add('grab');\n    container.classList.remove('grabbing');\n}\n\nfunction onDocumentTouchStart(event) {\n    // Only do something if the panorama is loaded\n    if (!loaded) {\n        return;\n    }\n    \n    onPointerDownPointerX = event.targetTouches[0].clientX;\n    onPointerDownPointerY = event.targetTouches[0].clientY;\n    \n    if (event.targetTouches.length == 2) {\n        // Down pointer is the center of the two fingers\n        onPointerDownPointerX += (event.targetTouches[1].clientX - event.targetTouches[0].clientX) * 0.5;\n        onPointerDownPointerY += (event.targetTouches[1].clientY - event.targetTouches[0].clientY) * 0.5; \n        onPointerDownPointerDist = Math.sqrt(\n                                    (event.targetTouches[0].clientX - event.targetTouches[1].clientX) * (event.targetTouches[0].clientX - event.targetTouches[1].clientX) +\n                                    (event.targetTouches[0].clientY - event.targetTouches[1].clientY) * (event.targetTouches[0].clientY - event.targetTouches[1].clientY)); \n    }\n    isUserInteracting = true;\n    latestInteraction = Date.now();\n    \n    onPointerDownYaw = config.yaw;\n    onPointerDownPitch = config.pitch;\n\n    animateInit();\n}\n\nfunction onDocumentTouchMove(event) {\n    // Override default action\n    event.preventDefault();\n    if (loaded) {\n        latestInteraction = Date.now();\n    }\n    if (isUserInteracting && loaded) {\n        var clientX = event.targetTouches[0].clientX;\n        var clientY = event.targetTouches[0].clientY;\n        \n        if (event.targetTouches.length == 2 && onPointerDownPointerDist != -1) {\n            clientX += (event.targetTouches[1].clientX - event.targetTouches[0].clientX) * 0.5;\n            clientY += (event.targetTouches[1].clientY - event.targetTouches[0].clientY) * 0.5;\n            var clientDist = Math.sqrt(\n                                    (event.targetTouches[0].clientX - event.targetTouches[1].clientX) * (event.targetTouches[0].clientX - event.targetTouches[1].clientX) +\n                                    (event.targetTouches[0].clientY - event.targetTouches[1].clientY) * (event.targetTouches[0].clientY - event.targetTouches[1].clientY));\n            setHfov(config.hfov += (onPointerDownPointerDist - clientDist) * 0.1);\n            onPointerDownPointerDist = clientDist;\n        }\n        \n        var yaw = (onPointerDownPointerX - clientX) * 0.1 + onPointerDownYaw;\n        yawSpeed = (yaw - config.yaw) % 360 * 0.2;\n        config.yaw = yaw;\n        \n        var pitch = (clientY - onPointerDownPointerY) * 0.1 + onPointerDownPitch;\n        pitchSpeed = (pitch - config.pitch) * 0.2;\n        config.pitch = pitch;\n    }\n}\n\nfunction onDocumentTouchEnd() {\n    isUserInteracting = false;\n    if (Date.now() - latestInteraction > 150) {\n        pitchSpeed = yawSpeed = 0;\n    }\n    onPointerDownPointerDist = -1;\n}\n\nfunction onDocumentMouseWheel(event) {\n    event.preventDefault();\n    \n    // Only do something if the panorama is loaded\n    if (!loaded) {\n        return;\n    }\n\n    latestInteraction = Date.now();\n    if (event.wheelDeltaY) {\n        // WebKit\n        setHfov(config.hfov -= event.wheelDeltaY * 0.05);\n        zoomSpeed = event.wheelDelta < 0 ? 1 : -1;\n    } else if (event.wheelDelta) {\n        // Opera / Explorer 9\n        setHfov(config.hfov -= event.wheelDelta * 0.05);\n        zoomSpeed = event.wheelDelta < 0 ? 1 : -1;\n    } else if (event.detail) {\n        // Firefox\n        setHfov(config.hfov += event.detail * 1.5);\n        zoomSpeed = event.detail > 0 ? 1 : -1;\n    }\n    \n    animateInit();\n}\n\nfunction onDocumentKeyPress(event) {\n    // Override default action\n    event.preventDefault();\n    \n    // Turn off auto-rotation if enabled\n    config.autoRotate = false;\n    \n    // Record key pressed\n    var keynumber = event.keycode;\n    if (event.which) {\n        keynumber = event.which;\n    }\n    \n    // If escape key is pressed\n    if (keynumber == 27) {\n        // If in fullscreen mode\n        if (fullscreenActive) {\n            toggleFullscreen();\n        }\n    } else {\n        // Change key\n        changeKey(keynumber, true);\n    }\n}\n\nfunction clearKeys() {\n    for (var i = 0; i < 10; i++) {\n        keysDown[i] = false;\n    }\n}\n\nfunction onDocumentKeyUp(event) {\n    // Override default action\n    event.preventDefault();\n    \n    // Record key released\n    var keynumber = event.keycode;\n    if (event.which) {\n        keynumber = event.which;\n    }\n    \n    // Change key\n    changeKey(keynumber, false);\n}\n\nfunction changeKey(keynumber, value) {\n    var keyChanged = false;\n    switch(keynumber) {\n        // If minus key is released\n        case 109: case 189: case 17:\n            if (keysDown[0] != value) { keyChanged = true; }\n            keysDown[0] = value; break;\n        \n        // If plus key is released\n        case 107: case 187: case 16:\n            if (keysDown[1] != value) { keyChanged = true; }\n            keysDown[1] = value; break;\n        \n        // If up arrow is released\n        case 38:\n            if (keysDown[2] != value) { keyChanged = true; }\n            keysDown[2] = value; break;\n        \n        // If \"w\" is released\n        case 87:\n            if (keysDown[6] != value) { keyChanged = true; }\n            keysDown[6] = value; break;\n        \n        // If down arrow is released\n        case 40:\n            if (keysDown[3] != value) { keyChanged = true; }\n            keysDown[3] = value; break;\n        \n        // If \"s\" is released\n        case 83:\n            if (keysDown[7] != value) { keyChanged = true; }\n            keysDown[7] = value; break;\n        \n        // If left arrow is released\n        case 37:\n            if (keysDown[4] != value) { keyChanged = true; }\n            keysDown[4] = value; break;\n        \n        // If \"a\" is released\n        case 65:\n            if (keysDown[8] != value) { keyChanged = true; }\n            keysDown[8] = value; break;\n        \n        // If right arrow is released\n        case 39:\n            if (keysDown[5] != value) { keyChanged = true; }\n            keysDown[5] = value; break;\n        \n        // If \"d\" is released\n        case 68:\n            if (keysDown[9] != value) { keyChanged = true; }\n            keysDown[9] = value;\n    }\n    \n    if (keyChanged && value) {\n        if (typeof performance !== 'undefined' && performance.now()) {\n            prevTime = performance.now();\n        } else {\n            prevTime = Date.now();\n        }\n        animateInit();\n    }\n}\n\nfunction keyRepeat() {\n    // Only do something if the panorama is loaded\n    if (!loaded) {\n        return;\n    }\n    \n    var prevPitch = config.pitch;\n    var prevYaw = config.yaw;\n    var prevZoom = config.hfov;\n    \n    var newTime;\n    if (typeof performance !== 'undefined' && performance.now()) {\n        newTime = performance.now();\n    } else {\n        newTime = Date.now();\n    }\n    if (prevTime === undefined) {\n        prevTime = newTime;\n    }\n    var diff = (newTime - prevTime) * config.hfov / 1700;\n    diff = Math.min(diff, 1.0);\n    \n    // If minus key is down\n    if (keysDown[0] && config.keyboardZoom == true) {\n        setHfov(config.hfov + (zoomSpeed * 0.8 + 0.5) * diff);\n    }\n    \n    // If plus key is down\n    if (keysDown[1] && config.keyboardZoom == true) {\n        setHfov(config.hfov + (zoomSpeed * 0.8 - 0.2) * diff);\n    }\n    \n    // If up arrow or \"w\" is down\n    if (keysDown[2] || keysDown[6]) {\n        // Pan up\n        config.pitch += (pitchSpeed * 0.8 + 0.2) * diff;\n    }\n    \n    // If down arrow or \"s\" is down\n    if (keysDown[3] || keysDown[7]) {\n        // Pan down\n        config.pitch += (pitchSpeed * 0.8 - 0.2) * diff;\n    }\n    \n    // If left arrow or \"a\" is down\n    if (keysDown[4] || keysDown[8]) {\n        // Pan left\n        config.yaw += (yawSpeed * 0.8 - 0.2) * diff;\n    }\n    \n    // If right arrow or \"d\" is down\n    if (keysDown[5] || keysDown[9]) {\n        // Pan right\n        config.yaw += (yawSpeed * 0.8 + 0.2) * diff;\n    }\n    \n    // If auto-rotate\n    var inactivityInterval = Date.now() - latestInteraction;\n    if (config.autoRotate && inactivityInterval > config.autoRotateInactivityDelay &&\n        config.autoRotateStopDelay !== false) {\n        // Pan\n        if (diff > 0.000001) {\n            config.yaw -= config.autoRotate / 60 * diff;\n        }\n        \n        // Deal with stopping auto rotation after a set delay\n        if (config.autoRotateStopDelay) {\n            config.autoRotateStopDelay -= newTime - prevTime;\n            if (config.autoRotateStopDelay <= 0) {\n                config.autoRotateStopDelay = false;\n            }\n        }\n    }\n\n    // \"Inertia\"\n    if (diff > 0) {\n        // \"Friction\"\n        var friction = 0.85;\n        \n        // Yaw\n        if (!keysDown[4] && !keysDown[5] && !keysDown[8] && !keysDown[9]) {\n            config.yaw += yawSpeed * diff * friction;\n        }\n        // Pitch\n        if (!keysDown[2] && !keysDown[3] && !keysDown[6] && !keysDown[7]) {\n            config.pitch += pitchSpeed * diff * friction;\n        }\n        // Zoom\n        if (!keysDown[0] && !keysDown[1]) {\n            setHfov(config.hfov + zoomSpeed * diff * friction);\n        }\n    }\n\n    prevTime = newTime;\n    if (diff > 0) {\n        yawSpeed = yawSpeed * 0.8 + (config.yaw - prevYaw) / diff * 0.2;\n        pitchSpeed = pitchSpeed * 0.8 + (config.pitch - prevPitch) / diff * 0.2;\n        zoomSpeed = zoomSpeed * 0.8 + (config.hfov - prevZoom) / diff * 0.2;\n        \n        // Limit speed\n        var maxSpeed = 5;\n        yawSpeed = Math.min(maxSpeed, Math.max(yawSpeed, -maxSpeed));\n        pitchSpeed = Math.min(maxSpeed, Math.max(pitchSpeed, -maxSpeed));\n        zoomSpeed = Math.min(maxSpeed, Math.max(zoomSpeed, -maxSpeed));\n    }\n    \n    // Stop movement if opposite controls are pressed\n    if (keysDown[0] && keysDown[0]) {\n        zoomSpeed = 0;\n    }\n    if ((keysDown[2] || keysDown[6]) && (keysDown[3] || keysDown[7])) {\n        pitchSpeed = 0;\n    }\n    if ((keysDown[4] || keysDown[8]) && (keysDown[5] || keysDown[9])) {\n        yawSpeed = 0;\n    }\n}\n\nfunction onDocumentResize() {\n    // Resize panorama renderer\n    renderer.resize();\n    animateInit();\n    \n    // Kludge to deal with WebKit regression: https://bugs.webkit.org/show_bug.cgi?id=93525\n    onFullScreenChange();\n}\n\nfunction animateInit() {\n    if (animating) {\n        return;\n    }\n    animating = true;\n    animate();\n}\n\nfunction animate() {\n    render();\n    if (isUserInteracting) {\n        requestAnimationFrame(animate);\n    } else if (keysDown[0] || keysDown[1] || keysDown[2] || keysDown[3] ||\n        keysDown[4] || keysDown[5] || keysDown[6] || keysDown[7] ||\n        keysDown[8] || keysDown[9] || config.autoRotate ||\n        Math.abs(yawSpeed) > 0.01 || Math.abs(pitchSpeed) > 0.01 ||\n        Math.abs(zoomSpeed) > 0.01) {\n        \n        keyRepeat();\n        requestAnimationFrame(animate);\n    } else if (renderer && (renderer.isLoading() || (config.video === true &&\n        !panoImage.paused && !panoImage.ended))) {\n        requestAnimationFrame(animate);\n    } else {\n        animating = false;\n    }\n}\n\nfunction render() {\n    var tmpyaw;\n\n    if (loaded) {\n        if (config.yaw > 180) {\n            config.yaw -= 360;\n        } else if (config.yaw < -180) {\n            config.yaw += 360;\n        }\n\n        // Keep a tmp value of yaw for autoRotate comparison later\n        tmpyaw = config.yaw;\n\n        // Ensure the yaw is within min and max allowed\n        config.yaw = Math.max(config.minYaw, Math.min(config.maxYaw, config.yaw));\n        \n        // Check if we autoRotate in a limited by min and max yaw\n        // If so reverse direction\n        if (config.autoRotate !== false && tmpyaw != config.yaw) {\n            config.autoRotate *= -1;\n        }\n\n        // Ensure the calculated pitch is within min and max allowed\n        config.pitch = Math.max(config.minPitch, Math.min(config.maxPitch, config.pitch));\n        \n        renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180);\n        \n        renderHotSpots();\n        \n        // Update compass\n        if (config.compass) {\n            compass.style.transform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n            compass.style.webkitTransform = 'rotate(' + (-config.yaw - config.northOffset) + 'deg)';\n        }\n    }\n}\n\nfunction renderInit() {\n    try {\n        renderer.canvas.width = window.innerWidth;\n        renderer.canvas.height = window.innerHeight;\n        renderer.init(config.haov * Math.PI / 180, config.vaov * Math.PI / 180, config.vOffset * Math.PI / 180, renderInitCallback);\n        \n    } catch(event) {\n        // Panorama not loaded\n        \n        // Display error if there is a bad texture\n        if (event.type == 'webgl error' || event.type == 'no webgl') {\n            anError();\n        } else if (event.type == 'webgl size error') {\n            anError('This panorama is too big for your device! It\\'s ' +\n                event.width + 'px wide, but your device only supports images up to ' +\n                event.maxWidth + 'px wide. Try another device.' +\n                ' (If you\\'re the author, try scaling down the image.)');\n        }\n    }\n}\n\nfunction renderInitCallback() {\n    if (oldRenderer !== undefined) {\n        oldRenderer.destroy();\n        \n        // Fade if specified\n        if (config.sceneFadeDuration && oldRenderer.fadeImg !== undefined) {\n            oldRenderer.fadeImg.style.opacity = 0;\n            // Remove image\n            setTimeout(function() {\n                renderContainer.removeChild(oldRenderer.fadeImg);\n            }, config.sceneFadeDuration);\n        }\n    }\n    \n    // Show compass if applicable\n    if (config.compass) {\n        compass.style.display = 'inline';\n    } else {\n        compass.style.display = 'none';\n    }\n    \n    // Show hotspots\n    createHotSpots();\n    \n    // Hide loading display\n    infoDisplay.load.box.style.display = 'none';\n    if (preview !== undefined) {\n        renderContainer.removeChild(preview);\n        preview = undefined;\n    }\n    loaded = true;\n    \n    animateInit();\n}\n\nfunction createHotSpots() {\n    if (hotspotsCreated) return;\n    \n    if (!config.hotSpots) {\n        config.hotSpots = [];\n    } else {\n        // Sort by pitch so tooltip is never obscured by another hot spot\n        config.hotSpots = config.hotSpots.sort(function(a, b) {\n            return a.pitch < b.pitch;\n        });\n        config.hotSpots.forEach(function(hs) {\n            var div = document.createElement('div');\n            div.setAttribute('class', 'hotspot tooltip sprite ' + hs.type);\n            \n            var span = document.createElement('span');\n            span.innerHTML = hs.text;\n            \n            var a;\n            if (hs.URL) {\n                a = document.createElement('a');\n                a.setAttribute('href', hs.URL);\n                a.setAttribute('target', '_blank');\n                renderContainer.appendChild(a);\n                div.style.cursor = 'pointer';\n                span.style.cursor = 'pointer';\n                a.appendChild(div);\n            } else if (hs.video) {\n                var video = document.createElement('video');\n                video.setAttribute('src',hs.video);\n                video.setAttribute('controls',true);\n                video.setAttribute('style','width:' + hs.width + 'px');\n                renderContainer.appendChild(div);\n                span.appendChild(video);\n            } else if (hs.image) {\n                a = document.createElement('a');\n                a.setAttribute('href', hs.image);\n                a.setAttribute('target', '_blank');\n                span.appendChild(a);\n                var image = document.createElement('img');\n                image.setAttribute('src',hs.image);\n                image.setAttribute('style','width:' + hs.width + 'px');\n                renderContainer.appendChild(div);\n                a.appendChild(image);\n                \n            } else {\n                if (hs.sceneId) {\n                    div.onclick = function() {\n                        loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw);\n                        return false;\n                    };\n                    div.ontouchend = function() {\n                        loadScene(hs.sceneId, hs.targetPitch, hs.targetYaw);\n                        return false;\n                    };\n                    div.style.cursor = 'pointer';\n                    span.style.cursor = 'pointer';\n                }\n                renderContainer.appendChild(div);\n            }\n            \n            div.appendChild(span);\n            span.style.width = span.scrollWidth - 20 + 'px';\n            span.style.marginLeft = -(span.scrollWidth - 26) / 2 + 'px';\n            span.style.marginTop = -span.scrollHeight - 12 + 'px';\n            hs.div = div;\n        });\n    }\n    hotspotsCreated = true;\n    renderHotSpots();\n}\n\nfunction destroyHotSpots() {\n    if (config.hotSpots) {\n        config.hotSpots.forEach(function(hs) {\n            var current = hs.div;\n            while(current.parentNode != renderContainer) {\n                current = current.parentNode;\n            }\n            renderContainer.removeChild(current);\n        });\n    }\n    hotspotsCreated = false;\n}\n\nfunction renderHotSpots() {\n    config.hotSpots.forEach(function(hs) {\n        var hsPitchSin = Math.sin(hs.pitch * Math.PI / 180);\n        var hsPitchCos = Math.cos(hs.pitch * Math.PI / 180);\n        var configPitchSin = Math.sin(config.pitch * Math.PI / 180);\n        var configPitchCos = Math.cos(config.pitch * Math.PI / 180);\n        var yawCos = Math.cos((-hs.yaw + config.yaw) * Math.PI / 180);\n        var hfovTan = Math.tan(config.hfov * Math.PI / 360);\n        var z = hsPitchSin * configPitchSin + hsPitchCos * yawCos * configPitchCos;\n        if ((hs.yaw <= 90 && hs.yaw > -90 && z <= 0) ||\n          ((hs.yaw > 90 || hs.yaw <= -90) && z <= 0)) {\n            hs.div.style.visibility = 'hidden';\n        } else {\n            hs.div.style.visibility = 'visible';\n            // Subpixel rendering doesn't work in Firefox\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=739176\n            var transform = 'translate(' + (-renderer.canvas.width /\n                hfovTan * Math.sin((-hs.yaw + config.yaw) * Math.PI / 180) *\n                hsPitchCos / z / 2 + renderer.canvas.width / 2 - 13) + 'px, ' +\n                (-renderer.canvas.width / hfovTan * (hsPitchSin *\n                configPitchCos - hsPitchCos * yawCos * configPitchSin) / z / 2 +\n                renderer.canvas.height / 2 - 13) + 'px) translateZ(1000000000px)';\n            hs.div.style.webkitTransform = transform;\n            hs.div.style.MozTransform = transform;\n            hs.div.style.transform = transform;\n        }\n    });\n}\n\nfunction parseURLParameters() {\n    var URL = decodeURI(window.location.href).split('?');\n    URL.shift();\n    if (URL.length < 1) {\n        // Display error if no configuration parameters are specified\n        anError('No configuration options were specified.');\n        return;\n    }\n    URL = URL[0].split('&');\n    var json = '{';\n    for (var i = 0; i < URL.length; i++) {\n        var option = URL[i].split('=')[0];\n        var value = URL[i].split('=')[1];\n        json += '\"' + option + '\":';\n        switch(option) {\n            case 'hfov': case 'pitch': case 'yaw': case 'haov': case 'vaov':\n            case 'vOffset':\n                json += value;\n                break;\n            case 'autoLoad': case 'ignoreGPanoXMP':\n                json += JSON.parse(value);\n                break;\n            default:\n                json += '\"' + decodeURIComponent(value) + '\"';\n        }\n        if (i < URL.length - 1) {\n            json += ',';\n        }\n    }\n    json += '}';\n    configFromURL = JSON.parse(json);\n    \n    var request;\n    \n    // Check for JSON configuration file\n    if (configFromURL.config) {\n        // Get JSON configuration file\n        request = new XMLHttpRequest();\n        request.onload = function() {\n            if (request.status != 200) {\n                // Display error if JSON can't be loaded\n                var a = document.createElement('a');\n                a.href = configFromURL.config;\n                a.innerHTML = a.href;\n                anError('The file ' + a.outerHTML + ' could not be accessed.');\n            }\n            \n            var c = JSON.parse(request.responseText);\n            \n            // Set JSON file location\n            c.basePath = configFromURL.config.substring(0,configFromURL.config.lastIndexOf('/')+1);\n            \n            // Merge options\n            for (var k in c) {\n                if (!configFromURL[k]) {\n                    configFromURL[k] = c[k];\n                }\n            }\n            \n            mergeConfig(firstScene);\n            processOptions();\n        };\n        request.open('GET', configFromURL.config);\n        request.send();\n        return;\n    }\n    \n    // Check for virtual tour JSON configuration file\n    var firstScene = null;\n    if (configFromURL.tour) {\n        // Get JSON configuration file\n        request = new XMLHttpRequest();\n        request.onload = function() {\n            if (request.status != 200) {\n                // Display error if JSON can't be loaded\n                var a = document.createElement('a');\n                a.href = configFromURL.tour;\n                a.innerHTML = a.href;\n                anError('The file ' + a.outerHTML + ' could not be accessed.');\n            }\n            \n            tourConfig = JSON.parse(request.responseText);\n            \n            // Set JSON file location\n            tourConfig.basePath = configFromURL.tour.substring(0,configFromURL.tour.lastIndexOf('/')+1);\n            \n            // Activate first scene if specified\n            if (tourConfig.default.firstScene) {\n                firstScene = tourConfig.default.firstScene;\n            }\n            if (configFromURL.firstScene) {\n                firstScene = configFromURL.firstScene;\n            }\n            \n            mergeConfig(firstScene);\n            processOptions();\n        };\n        request.open('GET', configFromURL.tour);\n        request.send();\n        return;\n    }\n    \n    mergeConfig(firstScene);\n    processOptions();\n}\n\nfunction mergeConfig(sceneId) {\n    config = {};\n    var k;\n    \n    // Merge default config\n    for (k in defaultConfig) {\n        if (defaultConfig.hasOwnProperty(k)) {\n            config[k] = defaultConfig[k];\n        }\n    }\n    \n    // Merge default scene config\n    for (k in tourConfig.default) {\n        if (tourConfig.default.hasOwnProperty(k)) {\n            config[k] = tourConfig.default[k];\n        }\n    }\n    \n    // Merge current scene config\n    if ((sceneId !== null) && (sceneId !== '') && (tourConfig.scenes) && (tourConfig.scenes[sceneId])) {\n        var scene = tourConfig.scenes[sceneId];\n        for (k in scene) {\n            if (scene.hasOwnProperty(k)) {\n                config[k] = scene[k];\n            }\n        }\n        config.activeScene = sceneId;\n    }\n    \n    // Merge URL and config file\n    for (k in configFromURL) {\n        if (configFromURL.hasOwnProperty(k)) {\n            config[k] = configFromURL[k];\n        }\n    }\n}\n\nfunction processOptions() {\n    // Process preview first so it always loads before the browser hits its\n    // maximum number of connections to a server as can happen with cubic\n    // panoramas\n    if ('preview' in config) {\n        var p = config.preview;\n        if (config.basePath) {\n            p = config.basePath + p;\n        } else if (tourConfig.basePath) {\n            p = tourConfig.basePath + p;\n        }\n        \n        preview = new Image();\n        preview.crossOrigin = 'anonymous';\n        preview.src = p;\n        preview.className = 'preview_img';\n        renderContainer.appendChild(preview);\n    }\n    \n    // Process other options\n    for (var key in config) {\n      if (config.hasOwnProperty(key)) {\n        switch(key) {\n            case 'title':\n                infoDisplay.title.innerHTML = config[key];\n                infoDisplay.container.style.display = 'inline';\n                break;\n            \n            case 'author':\n                infoDisplay.author.innerHTML = 'by ' + config[key];\n                infoDisplay.container.style.display = 'inline';\n                break;\n            \n            case 'fallback':\n                infoDisplay.errorMsg.innerHTML = '<p>Your browser does not support WebGL.<br><a href=\"' + config[key] + '\" target=\"_blank\">Click here to view this panorama in an alternative viewer.</a></p>';\n                break;\n            \n            case 'hfov':\n                setHfov(config[key]);\n                break;\n            \n            case 'pitch':\n                // Keep pitch within bounds\n                config.pitch = Math.max(config.minPitch, Math.min(config.maxPitch, config.pitch));\n                break;\n            \n            case 'autoLoad':\n                if (config[key] === true && oldRenderer === undefined) {\n                    // Show loading box\n                    infoDisplay.load.box.style.display = 'inline';\n                    // Hide load button\n                    controls.load.style.display = 'none';\n                    // Initialize\n                    init();\n                }\n                break;\n            \n            case 'autoRotate':\n                // Rotation speed in degrees/second (+ccw, -cw)\n                config.autoRotate = config[key];\n                break;\n\n            case 'autoRotateInactivityDelay':\n                // Start the auto-rotate only after user inactivity (milliseconds):\n                config.autoRotateInactivityDelay = config[key];\n                break;\n                \n            case 'autoRotateStopDelay':\n                // Stop the auto-rotate after a certain delay (milliseconds):\n                config.autoRotateStopDelay = config[key];\n                break;\n            \n            case 'header':\n                // Add contents to header\n                document.getElementsByTagName('head')[0].innerHTML += config[key];\n                break;\n            \n            case 'showZoomCtrl':\n                if (config[key]) {\n                    // Show zoom controls\n                    controls.zoom.style.display = 'block';\n                } else {\n                    // Hide zoom controls\n                    controls.zoom.style.display = 'none';\n                }\n                break;\n\n            case 'showFullscreenCtrl':\n                if (config[key] && ('fullscreen' in document || 'mozFullScreen' in document ||\n                    'webkitIsFullScreen' in document || 'msFullscreenElement' in document)) {\n                    \n                    // Show fullscreen control\n                    controls.fullscreen.style.display = 'block';\n                } else {\n                    // Hide fullscreen control\n                    controls.fullscreen.style.display = 'none';\n                }\n                break;\n        }\n      }\n    }\n}\n\nfunction toggleFullscreen() {\n    if (loaded && !error) {\n        if (!fullscreenActive) {\n            try {\n                if (container.requestFullscreen) {\n                    container.requestFullscreen();\n                } else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                } else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                } else {\n                    container.webkitRequestFullScreen();\n                }\n            } catch(event) {\n                // Fullscreen doesn't work\n            }\n        } else {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.webkitCancelFullScreen) {\n                document.webkitCancelFullScreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            }\n        }\n    }\n}\n\nfunction onFullScreenChange() {\n    if (document.fullscreen || document.mozFullScreen || document.webkitIsFullScreen || document.msFullscreenElement) {\n        controls.fullscreen.classList.add('fullscreentoggle_button_active');\n        fullscreenActive = true;\n    } else {\n        controls.fullscreen.classList.remove('fullscreentoggle_button_active');\n        fullscreenActive = false;\n    }\n}\n\nfunction zoomIn() {\n    if (loaded) {\n        setHfov(config.hfov -= 5);\n    }\n}\n\nfunction zoomOut() {\n    if (loaded) {\n        setHfov(config.hfov += 5);\n    }\n}\n\nfunction setHfov(i) {\n    // Keep field of view within bounds\n    if (i < config.minHfov && config.type != 'multires') {\n        config.hfov = config.minHfov;\n    } else if (config.type == 'multires' && renderer && i < renderer.canvas.width /\n        (config.multiRes.cubeResolution / 90 * 0.9)) {\n        \n        config.hfov = renderer.canvas.width / (config.multiRes.cubeResolution / 90 * 0.9);\n    } else if (i > config.maxHfov) {\n        config.hfov = config.maxHfov;\n    } else {\n        config.hfov = i;\n    }\n}\n\nfunction load() {\n    // Since WebGL error handling is very general, first we clear any error box\n    // since it is a new scene and the error from previous maybe because of lacking\n    // memory etc and not because of a lack of WebGL support etc\n    clearError();\n\n    controls.load.style.display = 'none';\n    infoDisplay.load.box.style.display = 'inline';\n    init();\n}\n\nfunction loadScene(sceneId, targetPitch, targetYaw) {\n    loaded = false;\n    oldRenderer = renderer;\n    \n    // Set up fade if specified\n    var fadeImg;\n    if (config.sceneFadeDuration) {\n        fadeImg = new Image();\n        fadeImg.className = 'fade_img';\n        fadeImg.style.transition = 'opacity ' + (config.sceneFadeDuration / 1000) + 's';\n        var data = renderer.render(config.pitch * Math.PI / 180, config.yaw * Math.PI / 180, config.hfov * Math.PI / 180, true);\n        if (data !== undefined) {\n            fadeImg.src = data;\n        }\n        renderContainer.appendChild(fadeImg);\n        oldRenderer.fadeImg = fadeImg;\n    }\n    \n    // Set new pointing\n    if (targetPitch === 'same') {\n        targetPitch = config.pitch;\n    }\n    if (targetYaw === 'same') {\n        targetYaw = config.yaw;\n    } else if (targetYaw === 'sameAzimuth') {\n        targetYaw = config.yaw + config.northOffset - tourConfig.scenes[sceneId].northOffset;\n    }\n    \n    // Destroy hot spots from previous scene\n    destroyHotSpots();\n    \n    // Create the new config for the scene\n    mergeConfig(sceneId);\n    \n    // Reload scene\n    processOptions();\n    if (targetPitch) {\n        config.pitch = targetPitch;\n    }\n    if (targetYaw) {\n        config.yaw = targetYaw;\n    }\n    load();\n}",
			"settings":
			{
				"buffer_size": 50809,
				"line_ending": "Windows",
				"name": "/*"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/index.html",
		"/C/xampp/htdocs/bakalarka/theta/theta5.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/header.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/content.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/js/admintopmenu.js",
		"/C/xampp/htdocs/bakalarka/THETA_GL-master/movie_360.html",
		"/C/xampp/htdocs/BC/shaders/fragment/equirectangular.frag",
		"/C/xampp/htdocs/FashionMalls/classes/template/TemplateViaFiles.php",
		"/C/xampp/htdocs/FashionMalls/classes/adapter/template/TemplateAdapter.php",
		"/C/xampp/htdocs/FashionMalls/classes/helper/HelperListSemantic.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminFormBuilderController.php",
		"/C/xampp/htdocs/FashionMalls/classes/Tab.php",
		"/C/xampp/htdocs/FashionMalls/classes/controller/AdminController.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminAccessController.php",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/css/layout.css",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/css/admin_layout.css",
		"/C/xampp/htdocs/FashionMalls/modules/blocktopmenu/views/templates/hook/blocktopmenu.tpl",
		"/C/xampp/htdocs/FashionMalls/modules/blocklogo/views/templates/hook/blocklogo.tpl",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/header.html",
		"/C/xampp/htdocs/BC/shaders/fragment/equirectangular.frag.c",
		"/C/xampp/htdocs/FashionMalls/classes/VirtualModel.php",
		"/C/xampp/htdocs/FashionMalls/classes/Validate.php",
		"/C/xampp/htdocs/FashionMalls/controllers/front/IndexController.php",
		"/C/xampp/htdocs/FashionMalls/classes/controller/Controller.php",
		"/C/xampp/htdocs/FashionMalls/index.php",
		"/C/xampp/htdocs/FashionMalls/classes/Tools.php",
		"/C/xampp/htdocs/FashionMalls/controllers/front/pagenotfoundController.php",
		"/C/xampp/htdocs/FashionMalls/controllers/front/TestovaciController.php",
		"/C/xampp/htdocs/FashionMalls/classes/AutoLoad.php",
		"/C/xampp/htdocs/FashionMalls/classes/Context.php",
		"/C/xampp/htdocs/FashionMalls/classes/ActiveRecord.php",
		"/C/xampp/htdocs/bakalarka/panoramaview/vmath.js",
		"/C/xampp/htdocs/bakalarka/theta/T1/PointLightedSphere_perFragment.html",
		"/C/xampp/htdocs/bakalarka/theta/T1/PointLightedSphere_perFragment.js",
		"/C/Users/HPCZ/Downloads/HTML5pano/HTML5pano/html5pano.js",
		"/C/xampp/htdocs/FashionMalls/classes/Access.php",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/helper/list/helper_list.tpl",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminHooksController.php",
		"/C/xampp/htdocs/bakalarka/theta/base/index.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/breadcrumb.html",
		"/C/xampp/htdocs/FashionMalls/classes/Link.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminLogoutController.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminConfigurationController.php",
		"/C/xampp/htdocs/FashionMalls/classes/Configuration.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminLoginController.php",
		"/C/xampp/htdocs/FashionMalls/admin/index.php",
		"/C/xampp/htdocs/FashionMalls/install/SQL/SQL_tab.sql",
		"/C/xampp/htdocs/FashionMalls/install/SQL/SQL_cms.sql",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/login_content.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/css/controllers/login/login_controller.css",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/login_controller.html",
		"/C/xampp/htdocs/FashionMalls/install/SQL/SQL_plugin_file.sql",
		"/C/xampp/htdocs/FashionMalls/install/SQL/SQL_plugin.sql",
		"/C/xampp/htdocs/FashionMalls/classes/Dispatcher.php",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/js/semantic-turn-on.js",
		"/C/xampp/htdocs/FashionMalls/classes/helper/HelperFormSemantic.php",
		"/C/Users/HPCZ/Desktop/ims-svoz-odpadu.cpp",
		"/C/Users/HPCZ/Downloads/06_xsluns01_xpokor63/ims-svoz-odpadu.cpp",
		"/C/xampp/htdocs/bakalarka/pannellum-min2/src/main/main.js",
		"/C/xampp/htdocs/bakalarka/webgl/tutorial/sylvester.js",
		"/C/xampp/htdocs/bakalarka/webgl/tutorial/sample7/webgl-demo2.js",
		"/C/xampp/htdocs/bakalarka/webgl/tutorial/sample7/index2.html",
		"/C/xampp/htdocs/bakalarka/panoramaview/sanegl.js",
		"/C/xampp/htdocs/bakalarka/panoramaview/glass.js",
		"/C/xampp/htdocs/bakalarka/panoramaview/pano.js",
		"/C/xampp/htdocs/bakalarka/pannellum-old/src/js/pannellum.js",
		"/C/xampp/htdocs/bakalarka/pannellum/src/js/pannellum.js",
		"/C/xampp/htdocs/bakalarka/pannellum/src/standalone/standalone.js",
		"/C/xampp/htdocs/IMS-proj/ims-svoz-odpadu.cpp",
		"/C/Users/HPCZ/Downloads/FIT-projects-master/FIT-projects-master/simlib++/IMS/ims-letiste.cc",
		"/C/Users/HPCZ/Downloads/ims_proj/simulator.h",
		"/C/Users/HPCZ/Downloads/projekt_ims/model.cpp",
		"/C/Users/HPCZ/Downloads/ims_proj/simulator.cc",
		"/C/xampp/htdocs/bakalarka/pannellum-min2/src/js/RequestAnimationFrame.js",
		"/C/xampp/htdocs/bakalarka/pannellum-min2/examples/multi2.htm",
		"/C/xampp/htdocs/bakalarka/pannellum-min2/examples/multi.htm",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/content.html",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/index.tpl",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/footer.html",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/about.tpl",
		"/C/xampp/htdocs/FashionMalls/plugins/js/ChartJs/.gitignore",
		"/C/xampp/htdocs/FashionMalls/plugins/js/ChartJs/dist/Chart.js",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/category.tpl",
		"/C/xampp/htdocs/FashionMalls/modules/blocktopmenu/blocktopmenu.php",
		"/C/xampp/htdocs/FashionMalls/config/settings.inc.php",
		"/C/xampp/htdocs/FashionMalls/config/defines.inc.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminModulesController.php",
		"/C/xampp/htdocs/FashionMalls/classes/controller/FrontController.php",
		"/C/xampp/htdocs/FashionMalls/classes/Media.php",
		"/C/xampp/htdocs/FashionMalls/classes/Plugin.php",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/css/controller/login/login_controller.css",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/plugins_controller.html",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/pagenotfound.tpl",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/module_controller.html",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminCategoryController.php",
		"/C/xampp/htdocs/FashionMalls/config/alias.php",
		"/C/xampp/htdocs/FashionMalls/classes/Module.php",
		"/C/xampp/htdocs/FashionMalls/.gitignore",
		"/C/xampp/htdocs/FashionMalls/install/SQL/SQL_employee.sql",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminCmsController.php",
		"/C/xampp/htdocs/FashionMalls/controllers/front/LoginController.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/index.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminAddMenuItemController.php",
		"/C/xampp/htdocs/FashionMalls/config/plugins.inc.php",
		"/C/xampp/htdocs/FashionMalls/plugins/php/swiftmailer-5.x/doc/installing.rst",
		"/C/xampp/htdocs/FashionMalls/classes/Mail.php",
		"/C/xampp/htdocs/HexaShop-New/classes/controller/Controller.php",
		"/C/xampp/htdocs/HexaShop-New/classes/Language.php",
		"/C/xampp/htdocs/HexaShop-New/classes/controller/FrontController.php",
		"/C/xampp/htdocs/HexaShop-New/classes/controller/AdminController.php",
		"/C/xampp/htdocs/HexaShop-New/classes/Mail.php",
		"/C/xampp/htdocs/FashionMalls/finediff.php",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/category_controller.html",
		"/C/xampp/htdocs/FashionMalls/controllers/front/CategoryController.php",
		"/C/xampp/htdocs/FashionMalls/modules/owncarousel/owncarousel.php",
		"/C/xampp/htdocs/FashionMalls/modules/blocktopmenu/views/templates/admin/add_menu_link.tpl",
		"/C/xampp/htdocs/HEX/HexaShop6/modules/blocktopmenu/blocktopmenu.php",
		"/C/xampp/htdocs/HEX/HexaShop6/modules/owncarousel/owncarousel.php",
		"/C/xampp/htdocs/HEX/HexaShop6/themes/default-bootstrap/header.tpl",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/css/controllers/obchody/obchody.css",
		"/C/xampp/htdocs/FashionMalls/controllers/front/ObchodyController.php",
		"/C/xampp/htdocs/FashionMalls/classes/db/Db.php",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/product_list.tpl",
		"/C/xampp/htdocs/FashionMalls/install/db_backups/fashionmalls___(14-00-07_05-10-2016)__rand1061673.sql",
		"/C/xampp/htdocs/FashionMalls/install/_function-install.php",
		"/C/xampp/htdocs/FashionMalls/plugins/php/parser_sql/parser_sql.php",
		"/C/xampp/htdocs/FashionMalls/plugins/php/parser_sql/php-sql-parser.php",
		"/C/xampp/htdocs/FashionMalls/plugins/php/SQL-Parser/src/PHPSQLParser/PHPSQLParser.php"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"videoElement",
			"cubeTexture",
			"videoDone",
			"cubeTexture",
			"startVideo",
			"videoDone",
			"startVideo",
			"initTextures",
			"start()",
			"drawScene",
			"cubeTexture",
			"startVideo",
			"updateTexture",
			"initTextures",
			"videoElement",
			"start",
			"Start",
			"start",
			"Start",
			"start",
			"Start",
			"start",
			"initTextures",
			"cubeTexture",
			"updateTexture",
			"drawScene",
			"videoImage",
			"image",
			"mmLoc",
			"onDocumentMouseWheel",
			"handleMouseMove",
			"getParamByKey",
			"0.3",
			"TRIAN",
			"LINE",
			"onPointerDownLon",
			"onPointerDownPointerX",
			"onDocumentMouseMove",
			"x.",
			"= new Vector3()",
			"SphereBufferGeometry",
			"0",
			"generatePageHead",
			"PAGE_HEAD",
			"id_access",
			"getAdminLinksOfController",
			"kozuka_font",
			"vLightWeighting",
			"aVertexNormal",
			"moonTexture",
			"30",
			"        var latitudeBands = 30;\n",
			"30",
			"moonTexture",
			"requestAnimFrame",
			"Texture.image",
			"texture.image",
			"texture",
			"cubeTexture",
			"initTextures",
			"startVideo",
			"updateTexture",
			"videoElement",
			"drawScene",
			"startVideo",
			"video",
			"500",
			"vertexPositionAttribute",
			"requestAnimationFrame",
			"TEXTURE_MIN_FILTER",
			"TEXTURE_MAG_FILTER",
			" gl.TEXTURE_MIN_FILTER",
			"gl.TEXTURE_2D",
			"gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)",
			"TEXTURE_MIN_FILTER",
			"gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)",
			"rotateY",
			"+",
			"texCoordVarying",
			"v1",
			"resolution",
			"texCoordVarying",
			"v_texCoord",
			"source",
			"sampler2DRect",
			"getBlendedPixel",
			"texCoordVarying",
			"gl_fragColor",
			"fragColor",
			"========",
			"transformedNormal",
			"rotateY",
			"mat4",
			"moonRotationMatrix",
			"degToRad",
			"shaderProgram",
			"pMatrixUniform",
			"uPMatrix",
			"displayAsDeprecated",
			"encrypt",
			"generateIndex",
			"purifyHTML",
			"prover_text",
			"getInput",
			"upload",
			"node.image",
			"processLoadedTexture",
			"config.haov",
			"renderInit",
			"init",
			"Init",
			"init",
			"haov",
			"this.video",
			"config.video",
			"Renderer",
			"this.image",
			"glBindType",
			"gl.TEXTURE_2D",
			"glBindType",
			"haov",
			"ment",
			"fragmentProgram",
			"fragEquirectangular",
			"fragmentProgram",
			"canvas",
			"alert",
			"animate"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "base/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3678,
						"regions":
						{
						},
						"selection":
						[
							[
								146,
								146
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "theta6.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7675,
						"regions":
						{
						},
						"selection":
						[
							[
								5049,
								5049
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1535.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "theta5.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7496,
						"regions":
						{
						},
						"selection":
						[
							[
								1167,
								1167
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 42.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2201,
						"regions":
						{
						},
						"selection":
						[
							[
								2183,
								2030
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 195.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"file": "pattern.jpg",
					"semi_transient": false,
					"stack_index": 8,
					"type": "image"
				},
				{
					"file": "pattern-014.jpg",
					"semi_transient": false,
					"stack_index": 7,
					"type": "image"
				},
				{
					"buffer": 4,
					"file": "theta.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7791,
						"regions":
						{
						},
						"selection":
						[
							[
								2679,
								2697
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 126.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/xampp/htdocs/FashionMalls/admin/themes/theme1/content.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 963,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/xampp/htdocs/bakalarka/THETA_GL-master/js/theta_gl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11106,
						"regions":
						{
						},
						"selection":
						[
							[
								2769,
								2769
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/xampp/htdocs/bakalarka/panoramaview/glass.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9271,
						"regions":
						{
						},
						"selection":
						[
							[
								3882,
								3722
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 123.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/xampp/htdocs/bakalarka/panoramaview/pano.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2476,
						"regions":
						{
						},
						"selection":
						[
							[
								129,
								129
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/C/xampp/htdocs/bakalarka/panoramaview/sanegl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10696,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 511.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 10,
					"file": "/C/xampp/htdocs/bakalarka/webgl-lessons/lesson11/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16413,
						"regions":
						{
						},
						"selection":
						[
							[
								6560,
								6575
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/webgl-demo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12912,
						"regions":
						{
						},
						"selection":
						[
							[
								7046,
								6992
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3734.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "gl-matrix-2.2.1.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 110352,
						"regions":
						{
						},
						"selection":
						[
							[
								86522,
								86529
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 40477.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/C/Users/HPCZ/Desktop/BC-c++/howto_webgl.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11059,
						"regions":
						{
						},
						"selection":
						[
							[
								1056,
								1036
							]
						],
						"settings":
						{
							"syntax": "Packages/Textile/Textile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/C/xampp/htdocs/BC/shaders/vertext/equirectangular.vert",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 313,
						"regions":
						{
						},
						"selection":
						[
							[
								208,
								208
							]
						],
						"settings":
						{
							"auto_name": "#version 150",
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/xampp/htdocs/bakalarka/webgl-lessons/js/webgl-utils.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5771,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 256.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 16,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22484,
						"regions":
						{
						},
						"selection":
						[
							[
								22214,
								22221
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3483.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 17,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50809,
						"regions":
						{
						},
						"selection":
						[
							[
								13902,
								13850
							]
						],
						"settings":
						{
							"auto_name": "/*",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5010.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.7536328994,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 94.0
	},
	"pinned_build_system": "",
	"project": "project.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\thomas\\Downloads\\formbuilder-gh-pages\\formbuilder-gh-pages\\formbuilder.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
