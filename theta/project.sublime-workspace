{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"com",
				"compass"
			],
			[
				"co",
				"content"
			],
			[
				"on",
				"onload"
			],
			[
				"ca",
				"canvas_dom"
			],
			[
				"allo",
				"allow_delete"
			],
			[
				"ver",
				"vertexBuffer"
			],
			[
				"CON",
				"console"
			],
			[
				"fo",
				"for	for (…) {…}"
			],
			[
				"active",
				"active_eshops"
			],
			[
				"cons",
				"console"
			],
			[
				"lat",
				"latitudeBands"
			],
			[
				"c",
				"canvas"
			],
			[
				"class",
				"class_exists"
			],
			[
				"va",
				"validation"
			],
			[
				"mar",
				"margin"
			],
			[
				"Z",
				"z"
			],
			[
				"con",
				"console"
			],
			[
				"VIDEO",
				"video"
			],
			[
				"get",
				"get_key"
			],
			[
				"is_f",
				"is_float"
			],
			[
				"Exe",
				"ExecuteS"
			],
			[
				"contr",
				"controller"
			],
			[
				"id",
				"id_form"
			],
			[
				"pro",
				"program"
			],
			[
				"Svo",
				"Svoz_odpadu"
			],
			[
				"fil",
				"file_id"
			],
			[
				"login",
				"login_controller"
			],
			[
				"puri",
				"purifyHTML"
			],
			[
				"metho",
				"method_exists"
			],
			[
				"sender",
				"sender_email"
			],
			[
				"opt",
				"option	Tag"
			],
			[
				"is_s",
				"is_string"
			],
			[
				"ma",
				"margin-right"
			],
			[
				"margin",
				"margin-left"
			],
			[
				"name",
				"name_form"
			],
			[
				"josn",
				"json_encode"
			],
			[
				"loca",
				"location"
			],
			[
				"ac",
				"action	Attr"
			],
			[
				"val",
				"value"
			],
			[
				"over",
				"override_file"
			],
			[
				"mo",
				"module"
			],
			[
				"acti",
				"activation"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"me",
				"method_exists"
			],
			[
				"setcookie",
				"setcookie"
			],
			[
				"border-bo",
				"border-bottom-style"
			],
			[
				"mari",
				"margin-top"
			],
			[
				"str_rep",
				"str_replace"
			],
			[
				"prepro",
				"preprocessing"
			],
			[
				"identi",
				"identifier"
			],
			[
				"array_",
				"array_keys"
			],
			[
				"favicon",
				"favicon_file"
			],
			[
				"is",
				"is_array"
			],
			[
				"camel",
				"camelToUnderScore"
			],
			[
				"is_a",
				"is_array"
			],
			[
				"jso",
				"json_encode"
			],
			[
				"ajax",
				"ajax_method"
			],
			[
				"post",
				"postProcess"
			],
			[
				"TH",
				"throw"
			],
			[
				"se",
				"select_options"
			],
			[
				"fi",
				"fields_form"
			],
			[
				"cen",
				"cena_produktu"
			],
			[
				"pa",
				"padding-top"
			],
			[
				"upda",
				"updateValue"
			],
			[
				"els",
				"else"
			],
			[
				"fade",
				"fadeOut"
			],
			[
				"poklad",
				"pokladna_tlacitko"
			],
			[
				"border",
				"border-bottom"
			],
			[
				"ELSE",
				"elseif"
			],
			[
				"table",
				"table_creation"
			],
			[
				"this",
				"this_file"
			],
			[
				"css",
				"css_files"
			],
			[
				"var",
				"var_dump"
			],
			[
				"p",
				"product"
			],
			[
				"array_m",
				"array_merge"
			],
			[
				"defi",
				"defined"
			],
			[
				"DELETE",
				"delete"
			],
			[
				"PREFI",
				"PREFIX_METHOD"
			],
			[
				"fun",
				"function"
			],
			[
				"fu",
				"function"
			],
			[
				"tem",
				"template_pointer"
			],
			[
				"conte",
				"Context"
			],
			[
				"module",
				"module_name"
			],
			[
				"Co",
				"Context"
			],
			[
				"tho",
				"throw	Throw Exception"
			],
			[
				"array_di",
				"array_diff"
			],
			[
				"_",
				"__construct"
			],
			[
				"unse",
				"unset"
			],
			[
				"wid",
				"width"
			],
			[
				"confi",
				"Configuration"
			],
			[
				"debu",
				"debug_print_backtrace"
			],
			[
				"tex",
				"text-decoration"
			],
			[
				"preg",
				"preg_match_all"
			],
			[
				"DI",
				"DIRECTORY_SEPARATOR"
			],
			[
				"ignore",
				"ignoreFiles"
			],
			[
				"diff",
				"diff_file"
			],
			[
				"session_de",
				"session_destroy"
			],
			[
				"preg_mat",
				"preg_match"
			],
			[
				"for",
				"foreach	foreach …"
			],
			[
				"vers",
				"versionFile"
			],
			[
				"updat",
				"updateValues"
			],
			[
				"json",
				"json_encode"
			],
			[
				"dele",
				"deleteByName"
			],
			[
				"ti",
				"time_limit"
			],
			[
				"time",
				"time_start"
			],
			[
				"print",
				"print_r"
			],
			[
				"cont",
				"controller"
			],
			[
				"pos",
				"positions"
			],
			[
				"font",
				"font-size"
			],
			[
				"Aktualiz",
				"aktualizace"
			],
			[
				"id_",
				"id_product"
			],
			[
				"strs",
				"strstr"
			],
			[
				"rgb",
				"rgba()"
			],
			[
				"di",
				"display"
			],
			[
				"te",
				"text-align"
			],
			[
				"pad",
				"padding-top"
			],
			[
				"fon",
				"font-size"
			],
			[
				"bac",
				"background-color"
			],
			[
				"bor",
				"border-right"
			],
			[
				"session",
				"session_start"
			],
			[
				"str_re",
				"str_replace"
			],
			[
				"s",
				"style	Attr"
			],
			[
				"iss",
				"isset"
			],
			[
				"setter",
				"setter_keys"
			],
			[
				"exp",
				"explode"
			],
			[
				"auto",
				"auto_increment"
			],
			[
				"nam",
				"nameOfHook"
			],
			[
				"strto",
				"strtolower"
			]
		]
	},
	"buffers":
	[
		{
			"file": "theta62.html",
			"settings":
			{
				"buffer_size": 16361,
				"line_ending": "Windows"
			}
		},
		{
			"file": "theta.html",
			"settings":
			{
				"buffer_size": 8335,
				"line_ending": "Windows"
			}
		},
		{
			"file": "theta6m.html",
			"settings":
			{
				"buffer_size": 21509,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/HPCZ/Downloads/treehouse-custom-video-controls (1)/treehouse-custom-video-controls/index.html",
			"settings":
			{
				"buffer_size": 999,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/HPCZ/Downloads/treehouse-custom-video-controls (1)/treehouse-custom-video-controls/script.js",
			"settings":
			{
				"buffer_size": 2390,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/BC/src/js/lib.js",
			"settings":
			{
				"buffer_size": 31090,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/BC/doc/tools/txt/PSANI.txt",
			"settings":
			{
				"buffer_size": 763,
				"line_ending": "Windows",
				"name": "PRAVIDLA PSANI"
			}
		},
		{
			"contents": "function polarToCartesian(x, y, radius, angleInDegrees) {\n  var angleShift = 180;\n  var angleInRadians = (angleInDegrees-angleShift) * (Math.PI / 180.0);\n\n  return {\n    x: x + (radius * Math.cos(angleInRadians)),\n    y: y + (radius * Math.sin(angleInRadians))\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle){\n\n\n  var angleShift = 180;\n  var angleInRadians = (angleInDegrees-angleShift) * (Math.PI / 180.0);\n\n \n    var start.x = x + (radius * Math.cos(endAngle)),\n    var start.y =  y + (radius * Math.sin(endAngle)),\n\n    var end.x = x + (radius * Math.cos(startAngle)),\n    var end.y = y + (radius * Math.sin(startAngle))\n \n\n\n\n\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n\n    var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n    var d = [\n        \"M\", start.x, start.y, \n        \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\n    ].join(\" \");\n\n    return d;       \n}\n\nwindow.onload = function() {\n  document.getElementById(\"arc1\").setAttribute(\"d\", describeArc(150, 150, 80, 0, 180));\n};",
			"settings":
			{
				"buffer_size": 1099,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "u = Math.sqrt(1/2)*Math.sign(u*v)/v*Math.sqrt(u*u+v*v-Math.sqrt(u*u+v*v) * Math.sqrt(u*u+v*v-4*u*u*v*v))\nv = Math.sqrt(1/2)*Math.sign(u*v)/u*Math.sqrt(u*u+v*v-Math.sqrt(u*u+v*v) * Math.sqrt(u*u+v*v-4*u*u*v*v))",
			"settings":
			{
				"buffer_size": 209,
				"line_ending": "Windows"
			}
		},
		{
			"contents": " uniform sampler2D sampler;\nuniform vec2 iResolution;\nuniform vec2 iMouse;\n\n#define EPSILON 0.000011\n\nvoid main(void)//Drag mouse over rendering area\n{\n  iResolution.x = 1920;\n  iResolution.y = 1080;\n\n  iMouse.x = 500;\n  iMouse.y = 305;\n\n  //normalized coords with some cheat \n  vec2 p = gl_FragCoord.xy / iResolution.x;\n\n  //screen proportion                                         \n  float prop = iResolution.x / iResolution.y;\n  //center coords\n  vec2 m = vec2(0.5, 0.5 / prop);\n  //vector from center to current fragment\n  vec2 d = p - m;\n  // distance of pixel from center\n  float r = sqrt(dot(d, d)); \n  //amount of effect\n  float power = ( 2.0 * 3.141592 / (2.0 * sqrt(dot(m, m))) ) *\n		(iMouse.x / iResolution.x - 0.5);\n  //radius of 1:1 effect\n  float bind;\n  if (power > 0.0) bind = sqrt(dot(m, m));//stick to corners\n  else {if (prop < 1.0) bind = m.x; else bind = m.y;}//stick to borders\n\n  //Weird formulas\n  vec2 uv;\n  if (power > 0.0)//fisheye\n    uv = m + normalize(d) * tan(r * power) * bind / tan( bind * power);\n  else if (power < 0.0)//antifisheye\n   uv = m + normalize(d) * atan(r * -power * 10.0) * bind / atan(-power * bind * 10.0);\n  else \n    uv = p;//no effect for power = 1.0\n  \n  //Second part of cheat\n  //for round effect, not elliptical\n  vec3 col = texture2D(sampler, vec2(uv.x, -uv.y * prop)).xyz;\n                                               \n  gl_FragColor = vec4(col, 1.0);\n}",
			"settings":
			{
				"buffer_size": 1414,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "// get DOM elements\nvideoContainer = document.getElementById('video-container');\nvideo = document.getElementById('video');\ncanvas = document.getElementById('glcanvas');\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\n\n// load the video, and play on ready\nvideo.load();\nvideo.oncanplaythrough = function() {\n  video.play();\n  drawScene();\n};\n\ngl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n\n// create and attach the shader program to the webGL context\nvar attributes, uniforms, program;\nvar attachShader = function(params) {\n  // compile the shaders from the shaders scripts\n  var getShaderByName = function(id) {\n    var shaderScript = document.getElementById(id);\n\n    var theSource = \"\";\n    var currentChild = shaderScript.firstChild;\n\n    while(currentChild) {\n      if (currentChild.nodeType === 3) {\n        theSource += currentChild.textContent;\n      }\n      currentChild = currentChild.nextSibling;\n    }\n\n    var result;\n    if (shaderScript.type === \"x-shader/x-fragment\") {\n      result = gl.createShader(gl.FRAGMENT_SHADER);\n    } else {\n      result = gl.createShader(gl.VERTEX_SHADER);\n    }\n    gl.shaderSource(result, theSource);\n    gl.compileShader(result);\n\n    if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n      alert(\"An error occurred compiling the shaders: \" + gl.getShaderInfoLog(result));\n      return null;\n    }\n    return result;\n  };\n\n  fragmentShader = getShaderByName(params.fragmentShaderName);\n  vertexShader = getShaderByName(params.vertexShaderName);\n\n  program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    alert(\"Unable to initialize the shader program: \" + gl.getProgramInfoLog(program));\n  }\n  gl.useProgram(program);\n\n  // get the location of attributes and uniforms\n  attributes = {};\n  for (var i = 0; i < params.attributes.length; i++) {\n    var attributeName = params.attributes[i];\n    attributes[attributeName] = gl.getAttribLocation(program, attributeName);\n    gl.enableVertexAttribArray(attributes[attributeName]);\n  }\n  uniforms = {};\n  for (i = 0; i < params.uniforms.length; i++) {\n    var uniformName = params.uniforms[i];\n    uniforms[uniformName] = gl.getUniformLocation(program, uniformName);\n    gl.enableVertexAttribArray(attributes[uniformName]);\n  }\n};\nattachShader({\n  fragmentShaderName: 'shader-fs',\n  vertexShaderName: 'shader-vs',\n  attributes: ['aVertexPosition'],\n  uniforms: ['uSampler'],\n});\n\n// some webGL initialization\ngl.clearColor(0.0, 0.0, 0.0, 0.0);\ngl.clearDepth(1.0);\ngl.disable(gl.DEPTH_TEST);\n\npositionsBuffer = gl.createBuffer();\ngl.bindBuffer(gl.ARRAY_BUFFER, positionsBuffer);\nvar positions = [\n  -1.0, -1.0,\n  1.0, -1.0,\n  1.0,  1.0,\n  -1.0,  1.0,\n];\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n  verticesIndexBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, verticesIndexBuffer);\n  var vertexIndices = [\n  0,  1,  2,      0,  2,  3,\n];\ngl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n              new Uint16Array(vertexIndices), gl.STATIC_DRAW);\n\ntexture = gl.createTexture();\ngl.bindTexture(gl.TEXTURE_2D, texture);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\ngl.bindTexture(gl.TEXTURE_2D, null);\n\n// update the texture from the video\nupdateTexture = function() {\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n  // the next line fails in Safari if the video is coming from another domain or subdomain\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB,\n                gl.UNSIGNED_BYTE, video);\n  gl.bindTexture(gl.TEXTURE_2D, null);\n};\n\n// draw stuff in the canvas\ndrawScene = function() {\n  updateTexture();\n  gl.useProgram(program);\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionsBuffer);\n  gl.vertexAttribPointer(attributes['aVertexPosition'], 2, gl.FLOAT, false, 0, 0);\n\n  // Specify the texture to map onto the faces.\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.uniform1i(uniforms['uSampler'], 0);\n\n  // Draw\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, verticesIndexBuffer);\n  gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n  // keep looping\n  requestAnimationFrame(drawScene);\n};\n",
			"settings":
			{
				"buffer_size": 4545,
				"line_ending": "Windows"
			}
		},
		{
			"file": "zdroje.txt",
			"settings":
			{
				"buffer_size": 1750,
				"line_ending": "Windows",
				"name": "ZDROJE:"
			}
		},
		{
			"file": "TO_DO.txt",
			"settings":
			{
				"buffer_size": 1592,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/BC/shaders/vertext/equirectangular.vert",
			"settings":
			{
				"buffer_size": 313,
				"line_ending": "Windows",
				"name": "#version 150"
			}
		},
		{
			"file": "/C/xampp/htdocs/BC/shaders/fragment/equirectangular.frag",
			"settings":
			{
				"buffer_size": 6461,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/index.html",
			"settings":
			{
				"buffer_size": 15258,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/pannellum-min2/src/js/panorama.js",
			"settings":
			{
				"buffer_size": 58818,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/theta/gl-matrix-2.2.1.js",
			"settings":
			{
				"buffer_size": 110331,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/webgl-lessons/lesson14/index.html",
			"settings":
			{
				"buffer_size": 18292,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/webgl-demo.js",
			"settings":
			{
				"buffer_size": 13207,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build/three.js",
			"settings":
			{
				"buffer_size": 1026130,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<html>\n\n<head>\n<title>Learning WebGL &mdash; lesson 11</title>\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\">\n\n<script type=\"text/javascript\" src=\"../js/gl-matrix-2.2.1.js\"></script>\n<script type=\"text/javascript\" src=\"../js/webgl-utils.js\"></script>\n\n<script id=\"shader-fs\" type=\"x-shader/x-fragment\">\n    precision mediump float;\n\n    varying vec2 vTextureCoord;\n    varying vec3 vLightWeighting;\n\n    uniform sampler2D uSampler;\n\n    void main(void) {\n        vec4 textureColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t));\n        gl_FragColor = vec4(textureColor.rgb * vLightWeighting, textureColor.a);\n    }\n</script>\n\n<script id=\"shader-vs\" type=\"x-shader/x-vertex\">\n    attribute vec3 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    uniform mat4 uMVMatrix;\n    uniform mat4 uPMatrix;\n    uniform mat3 uNMatrix;\n\n    uniform vec3 uAmbientColor;\n\n    uniform vec3 uLightingDirection;\n    uniform vec3 uDirectionalColor;\n\n    uniform bool uUseLighting;\n\n    varying vec2 vTextureCoord;\n    varying vec3 vLightWeighting;\n\n    void main(void) {\n        gl_Position =    uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\n        vTextureCoord = aTextureCoord;\n\n             vLightWeighting = vec3(1.0, 1.0, 1.0);\n     }\n</script>\n\n\n<script type=\"text/javascript\">\n\n    var gl;\n\n    function initGL(canvas) {\n        try {\n            gl = canvas.getContext(\"webgl\");\n            gl.viewportWidth = canvas.width;\n            gl.viewportHeight = canvas.height;\n        } catch (e) {\n        }\n        if (!gl) {\n            alert(\"Could not initialise WebGL, sorry :-(\");\n        }\n    }\n\n\n    function getShader(gl, id) {\n        var shaderScript = document.getElementById(id);\n        if (!shaderScript) {\n            return null;\n        }\n\n        var str = \"\";\n        var k = shaderScript.firstChild;\n        while (k) {\n            if (k.nodeType == 3) {\n                str += k.textContent;\n            }\n            k = k.nextSibling;\n        }\n\n        var shader;\n        if (shaderScript.type == \"x-shader/x-fragment\") {\n            shader = gl.createShader(gl.FRAGMENT_SHADER);\n        } else if (shaderScript.type == \"x-shader/x-vertex\") {\n            shader = gl.createShader(gl.VERTEX_SHADER);\n        } else {\n            return null;\n        }\n\n        gl.shaderSource(shader, str);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert(gl.getShaderInfoLog(shader));\n            return null;\n        }\n\n        return shader;\n    }\n\n\n    var shaderProgram;\n\n    function initShaders() {\n        var fragmentShader = getShader(gl, \"shader-fs\");\n        var vertexShader = getShader(gl, \"shader-vs\");\n\n        shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        gl.attachShader(shaderProgram, fragmentShader);\n        gl.linkProgram(shaderProgram);\n\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            alert(\"Could not initialise shaders\");\n        }\n\n        gl.useProgram(shaderProgram);\n\n        shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\n        gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\n\n        shaderProgram.textureCoordAttribute = gl.getAttribLocation(shaderProgram, \"aTextureCoord\");\n        gl.enableVertexAttribArray(shaderProgram.textureCoordAttribute);\n\n \n\n        shaderProgram.pMatrixUniform = gl.getUniformLocation(shaderProgram, \"uPMatrix\");\n        shaderProgram.mvMatrixUniform = gl.getUniformLocation(shaderProgram, \"uMVMatrix\");\n        shaderProgram.nMatrixUniform = gl.getUniformLocation(shaderProgram, \"uNMatrix\");\n        \n        shaderProgram.samplerUniform = gl.getUniformLocation(shaderProgram, \"uSampler\");\n        shaderProgram.useLightingUniform = gl.getUniformLocation(shaderProgram, \"uUseLighting\");\n        shaderProgram.ambientColorUniform = gl.getUniformLocation(shaderProgram, \"uAmbientColor\");\n        shaderProgram.lightingDirectionUniform = gl.getUniformLocation(shaderProgram, \"uLightingDirection\");\n        shaderProgram.directionalColorUniform = gl.getUniformLocation(shaderProgram, \"uDirectionalColor\");\n    }\n\n\n    function handleLoadedTexture(texture) {\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.image);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n        gl.generateMipmap(gl.TEXTURE_2D);\n\n     }\n\n\n    var moonTexture;\n\n    function initTexture() {\n        moonTexture = gl.createTexture();\n        moonTexture.image = new Image();\n        moonTexture.image.onload = function () {\n            handleLoadedTexture(moonTexture)\n        };\n\n        moonTexture.image.src = \"p7.jpg\";\n    }\n\n\n    var mvMatrix = mat4.create();\n    var mvMatrixStack = [];\n    var pMatrix = mat4.create();\n\n    function mvPushMatrix() {\n        var copy = mat4.create();\n        // Update: mat4.set(mvMatrix, copy); mat4.set() was removed from gl-matrix, use mat4.copy().\n        mat4.copy(copy, mvMatrix);\n        mvMatrixStack.push(copy);\n    }\n\n    function mvPopMatrix() {\n        if (mvMatrixStack.length == 0) {\n            throw \"Invalid popMatrix!\";\n        }\n        mvMatrix = mvMatrixStack.pop();\n    }\n\n    function setMatrixUniforms() {\n        gl.uniformMatrix4fv(shaderProgram.pMatrixUniform, false, pMatrix);\n        gl.uniformMatrix4fv(shaderProgram.mvMatrixUniform, false, mvMatrix);\n\n        var normalMatrix = mat3.create();\n        // Update:\n        //   mat4.toInverseMat3(mvMatrix, normalMatrix);\n        //   mat3.transpose(normalMatrix);\n        // These two methods have been combined into a single method in the mat3 class, mat3.normalFromMat4().\n        mat3.normalFromMat4(normalMatrix, mvMatrix);\n        gl.uniformMatrix3fv(shaderProgram.nMatrixUniform, false, normalMatrix);\n    }\n\n\n    function degToRad(degrees) {\n        return degrees * Math.PI / 180;\n    }\n\n\n    var mouseDown = false;\n    var lastMouseX = null;\n    var lastMouseY = null;\n\n    var moonRotationMatrix = mat4.create();\n    mat4.identity(moonRotationMatrix);\n\n    function handleMouseDown(event) {\n        mouseDown = true;\n        lastMouseX = event.clientX;\n        lastMouseY = event.clientY;\n    }\n\n\n    function handleMouseUp(event) {\n        mouseDown = false;\n    }\n\n\n    function handleMouseMove(event) {\n        if (!mouseDown) {\n            return;\n        }\n        var newX = event.clientX;\n        var newY = event.clientY;\n\n        var deltaX = newX - lastMouseX;\n        var newRotationMatrix = mat4.create();\n        mat4.identity(newRotationMatrix);\n        // Update: mat4.rotate(newRotationMatrix, degToRad(deltaX / 10), [0, 1, 0]); mat4.rotate() API has changed to mat4.rotate(out, a, rad, axis)\n        // where out is the receiving matrix and a is the matrix to rotate.\n        mat4.rotate(newRotationMatrix, newRotationMatrix, degToRad(deltaX / 10), [0, 1, 0]);\n\n        var deltaY = newY - lastMouseY;\n        mat4.rotate(newRotationMatrix, newRotationMatrix, degToRad(deltaY / 10), [1, 0, 0]);\n\n        // Update: mat4.multiply(newRotationMatrix, moonRotationMatrix, moonRotationMatrix); API has changed.\n        mat4.multiply(moonRotationMatrix, newRotationMatrix, moonRotationMatrix);\n\n        lastMouseX = newX;\n        lastMouseY = newY;\n    }\n\n\n\n    var moonVertexPositionBuffer;\n    var moonVertexNormalBuffer;\n    var moonVertexTextureCoordBuffer;\n    var moonVertexIndexBuffer;\n\n    function initBuffers() {\n        var latitudeBands = 30;\n        var longitudeBands = 30;\n        var radius = 2;\n\n        var vertexPositionData = [];\n        var normalData = [];\n        var textureCoordData = [];\n        for (var latNumber=0; latNumber <= latitudeBands; latNumber++) {\n            var theta = latNumber * Math.PI / latitudeBands;\n            var sinTheta = Math.sin(theta);\n            var cosTheta = Math.cos(theta);\n\n            for (var longNumber=0; longNumber <= longitudeBands; longNumber++) {\n                var phi = longNumber * 2 * Math.PI / longitudeBands;\n                var sinPhi = Math.sin(phi);\n                var cosPhi = Math.cos(phi);\n\n                var x = cosPhi * sinTheta;\n                var y = cosTheta;\n                var z = sinPhi * sinTheta;\n                var u = 1 - (longNumber / longitudeBands);\n                var v = 1 - (latNumber / latitudeBands);\n\n                normalData.push(x);\n                normalData.push(y);\n                normalData.push(z);\n                textureCoordData.push(u);\n                textureCoordData.push(v);\n                vertexPositionData.push(radius * x);\n                vertexPositionData.push(radius * y);\n                vertexPositionData.push(radius * z);\n            }\n        }\n\n        var indexData = [];\n        for (var latNumber=0; latNumber < latitudeBands; latNumber++) {\n            for (var longNumber=0; longNumber < longitudeBands; longNumber++) {\n                var first = (latNumber * (longitudeBands + 1)) + longNumber;\n                var second = first + longitudeBands + 1;\n                indexData.push(first);\n                indexData.push(second);\n                indexData.push(first + 1);\n\n                indexData.push(second);\n                indexData.push(second + 1);\n                indexData.push(first + 1);\n            }\n        }\nconsole.log(normalData);\nconsole.log(indexData);\nconsole.log(textureCoordData);\nconsole.log(vertexPositionData);\n\n        moonVertexNormalBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, moonVertexNormalBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normalData), gl.STATIC_DRAW);\n        moonVertexNormalBuffer.itemSize = 3;\n        moonVertexNormalBuffer.numItems = normalData.length / 3;\n\n        moonVertexTextureCoordBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, moonVertexTextureCoordBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureCoordData), gl.STATIC_DRAW);\n        moonVertexTextureCoordBuffer.itemSize = 2;\n        moonVertexTextureCoordBuffer.numItems = textureCoordData.length / 2;\n\n        moonVertexPositionBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, moonVertexPositionBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexPositionData), gl.STATIC_DRAW);\n        moonVertexPositionBuffer.itemSize = 3;\n        moonVertexPositionBuffer.numItems = vertexPositionData.length / 3;\n\n        moonVertexIndexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, moonVertexIndexBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexData), gl.STATIC_DRAW);\n        moonVertexIndexBuffer.itemSize = 1;\n        moonVertexIndexBuffer.numItems = indexData.length;\n    }\n\n\n    function drawScene() {\n        gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n        // Update: mat4.perspective(45, gl.viewportWidth / gl.viewportHeight, 0.1, 100.0, pMatrix); mat4.perspective() API has changed.\n        mat4.perspective (pMatrix, 0.75, gl.viewportWidth / gl.viewportHeight, 0.1, 100.0);\n\n        var lighting = document.getElementById(\"lighting\").checked;\n        gl.uniform1i(shaderProgram.useLightingUniform, lighting);\n        if (lighting) {\n            gl.uniform3f(\n                shaderProgram.ambientColorUniform,\n                parseFloat(document.getElementById(\"ambientR\").value),\n                parseFloat(document.getElementById(\"ambientG\").value),\n                parseFloat(document.getElementById(\"ambientB\").value)\n            );\n\n            var lightingDirection = [\n                parseFloat(document.getElementById(\"lightDirectionX\").value),\n                parseFloat(document.getElementById(\"lightDirectionY\").value),\n                parseFloat(document.getElementById(\"lightDirectionZ\").value)\n            ];\n            var adjustedLD = vec3.create();\n            // Update: vec3.normalize(lightingDirection, adjustedLD); vec3.normalize() API has reversed the parameters.\n            vec3.normalize(adjustedLD, lightingDirection);\n            // Update: vec3.scale(adjustedLD, -1); vec3.scale() API has changed to vec3.scale(out, a, b)\n            // where out is the receiving vector and a is the vector to scale.\n            vec3.scale(adjustedLD, adjustedLD, -1);\n            gl.uniform3fv(shaderProgram.lightingDirectionUniform, adjustedLD);\n\n            gl.uniform3f(\n                shaderProgram.directionalColorUniform,\n                parseFloat(document.getElementById(\"directionalR\").value),\n                parseFloat(document.getElementById(\"directionalG\").value),\n                parseFloat(document.getElementById(\"directionalB\").value)\n            );\n        }\n\n        mat4.identity(mvMatrix);\n\n        // Update: mat4.translate(mvMatrix, [0, 0, -6]); mat4.translate() API has changed to mat4.translate(out, a, v)\n        // where out is the receiving matrix, a is the matrix to translate, and v is the vector to translate by. z altered to\n        // approximate original scene.\n        mat4.translate(mvMatrix, mvMatrix, [0, 0, 0.0]);\n\n        mat4.multiply(mvMatrix, mvMatrix, moonRotationMatrix);\n\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, moonTexture);\n        gl.uniform1i(shaderProgram.samplerUniform, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, moonVertexPositionBuffer);\n        gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, moonVertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, moonVertexTextureCoordBuffer);\n        gl.vertexAttribPointer(shaderProgram.textureCoordAttribute, moonVertexTextureCoordBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, moonVertexNormalBuffer);\n        gl.vertexAttribPointer(shaderProgram.vertexNormalAttribute, moonVertexNormalBuffer.itemSize, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, moonVertexIndexBuffer);\n        setMatrixUniforms();\n        gl.drawElements(gl.TRIANGLES, moonVertexIndexBuffer.numItems, gl.UNSIGNED_SHORT, 0);\n    }\n\n\n    function tick() {\n        requestAnimFrame(tick);\n        drawScene();\n    }\n\n\n    function webGLStart() {\n        var canvas = document.getElementById(\"lesson11-canvas\");\n        initGL(canvas);\n        initShaders();\n        initBuffers();\n        initTexture();\n\n        gl.clearColor(0.0, 0.0, 0.0, 1.0);\n        gl.enable(gl.DEPTH_TEST);\n\n        canvas.onmousedown = handleMouseDown;\n        document.onmouseup = handleMouseUp;\n        document.onmousemove = handleMouseMove;\n\n        tick();\n    }\n\n</script>\n\n\n</head>\n\n\n<body onload=\"webGLStart();\">\n    <a href=\"http://learningwebgl.com/blog/?p=1253\">&lt;&lt; Back to Lesson 11</a><br />\n\n    <canvas id=\"lesson11-canvas\" style=\"border: none;\" width=\"840\" height=\"840\"></canvas>\n    <br/>\n\n    <input type=\"checkbox\" id=\"lighting\" checked /> Use lighting<br/>\n    Spin the moon by dragging it with the mouse.\n    <br/>\n\n    <h2>Directional light:</h2>\n\n    <table style=\"border: 0; padding: 10px;\">\n        <tr>\n            <td><b>Direction:</b>\n            <td>X: <input type=\"text\" id=\"lightDirectionX\" value=\"-1.0\" />\n            <td>Y: <input type=\"text\" id=\"lightDirectionY\" value=\"-1.0\" />\n            <td>Z: <input type=\"text\" id=\"lightDirectionZ\" value=\"-1.0\" />\n        </tr>\n        <tr>\n            <td><b>Colour:</b>\n            <td>R: <input type=\"text\" id=\"directionalR\" value=\"0.8\" />\n            <td>G: <input type=\"text\" id=\"directionalG\" value=\"0.8\" />\n            <td>B: <input type=\"text\" id=\"directionalB\" value=\"0.8\" />\n        </tr>\n    </table>\n\n\n    <h2>Ambient light:</h2>\n\n    <table style=\"border: 0; padding: 10px;\">\n        <tr>\n            <td><b>Colour:</b>\n            <td>R: <input type=\"text\" id=\"ambientR\" value=\"0.2\" />\n            <td>G: <input type=\"text\" id=\"ambientG\" value=\"0.2\" />\n            <td>B: <input type=\"text\" id=\"ambientB\" value=\"0.2\" />\n        </tr>\n    </table>\n    <br/>\n\n    Moon texture courtesy of <a href=\"http://maps.jpl.nasa.gov/\">the Jet Propulsion Laboratory</a>.\n    <br/>\n    <br/>\n\n </body>\n\n</html>\n",
			"file": "/C/xampp/htdocs/bakalarka/webgl-lessons/lesson11/index.html",
			"file_size": 16413,
			"file_write_time": 131337369402255095,
			"settings":
			{
				"buffer_size": 16422,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/pannellum-min2/src/js/compass.js",
			"settings":
			{
				"buffer_size": 1958,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/pannellum/src/js/pannellum.js",
			"settings":
			{
				"buffer_size": 56782,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/xampp/htdocs/BC/doc/MicrosoftWord/howto_webgl.txt",
			"settings":
			{
				"buffer_size": 11059,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/xampp/htdocs/bakalarka/webgl/README.md",
			"settings":
			{
				"buffer_size": 76,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/xampp/htdocs/BC/theta/GEOM-texture.html",
		"/C/xampp/htdocs/BC/theta/GEOM.html",
		"/C/xampp/htdocs/BC/theta/theta52.html",
		"/C/xampp/htdocs/BC/theta/theta-sim.html",
		"/C/xampp/htdocs/HexaShop-Manager/config/config.php",
		"/C/xampp/htdocs/HexaShop-Manager/index.php",
		"/C/xampp/htdocs/BC/theta/koule-aprox.html",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/js/semantic-turn-on.js",
		"/C/xampp/htdocs/FashionMalls/classes/Tools.php",
		"/C/xampp/htdocs/BC/doc/tools/php/tikz.php",
		"/C/xampp/htdocs/BC/theta/theta.html",
		"/C/xampp/htdocs/BC/src/js/lib.js",
		"/C/xampp/htdocs/BC/theta/theta61.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/module_controller.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/js/semantic-turn-on.js",
		"/C/xampp/htdocs/HexaShop-New/modules/dashactivity/dashactivity.php",
		"/C/xampp/htdocs/FashionMalls/classes/Cache.php",
		"/C/xampp/htdocs/HexaShop-New/classes/cache/Cache.php",
		"/C/xampp/htdocs/HexaShop-New/classes/cache/CacheXcache.php",
		"/C/xampp/htdocs/HexaShop-New/classes/cache/CacheMemcache.php",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/header.html",
		"/C/xampp/htdocs/FashionMalls/modules/blocktopmenu/blocktopmenu.php",
		"/C/xampp/htdocs/BC/theta/theta7.html",
		"/C/xampp/htdocs/BC/theta/theta-sim-cube.html",
		"/C/xampp/htdocs/BC/theta/mouse.html",
		"/C/xampp/htdocs/BC/theta/theta62.html",
		"/C/xampp/htdocs/BC/theta/theta3.html",
		"/C/xampp/htdocs/BC/theta/theta4.html",
		"/C/xampp/htdocs/BC/theta/theta2.html",
		"/C/xampp/htdocs/BC/theta/T1/PointLightedSphere_perFragment.html",
		"/C/xampp/htdocs/BC/theta/T1/PointLightedSphere_perFragment.js",
		"/C/xampp/htdocs/BC/theta/theta6.html",
		"/C/xampp/htdocs/BC/theta/theta5.html",
		"/C/xampp/htdocs/FashionMalls/classes/helper/HelperListSemantic.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminFormBuilderController.php",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/helper/list/helper_list.tpl",
		"/C/xampp/htdocs/BC/theta/GEOM-Three.html",
		"/C/xampp/htdocs/BC/theta/build/three.js",
		"/C/xampp/htdocs/bakalarka/webgl-lessons/js/webgl-utils.js",
		"/C/xampp/htdocs/bakalarka/pannellum/src/js/pannellum.js",
		"/C/xampp/htdocs/bakalarka/pannellum/src/js/libpannellum.js",
		"/C/xampp/htdocs/bakalarka/threepano/in2sg_office_panorama.html",
		"/C/xampp/htdocs/bakalarka/panoramaview/sanegl.js",
		"/C/xampp/htdocs/bakalarka/THETA_GL-master/js/theta_gl.js",
		"/C/xampp/htdocs/bakalarka/panoramaview/glass.js",
		"/C/xampp/htdocs/bakalarka/panoramaview/pano.js",
		"/C/xampp/htdocs/bakalarka/mozvr-pano/js/lib/fetch.js",
		"/C/xampp/htdocs/bakalarka/webgl-lessons/lesson16/index.html",
		"/C/xampp/htdocs/HexaShop-Manager/mouse.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/logger_controller.html",
		"/C/xampp/htdocs/FashionMalls/classes/helper/HelperFormSemantic.php",
		"/C/xampp/htdocs/FashionMalls/classes/helper/HelperListSemanticModal.php",
		"/C/xampp/htdocs/BC/src/js/oldLIb.js",
		"/C/xampp/htdocs/BC/src/js/Externallib.js",
		"/C/xampp/htdocs/HexaShop-Manager/js/index.js",
		"/C/xampp/htdocs/HexaShop-Manager/req.php",
		"/C/xampp/htdocs/BC/theta/theta8.html",
		"/C/xampp/htdocs/BC/theta/thetaX7.html",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminTabController.php",
		"/C/xampp/htdocs/FashionMalls/controllers/front/LoginController.php",
		"/C/xampp/htdocs/FashionMalls/classes/controller/AdminController.php",
		"/C/xampp/htdocs/BC/theta/data/p7.jpg",
		"/C/xampp/htdocs/BC/src/Externallib.js",
		"/C/xampp/htdocs/BC/src/lib.js",
		"/C/Users/thomas/Desktop/Živnost/Danové přiznání 2016/DPFDP5-9301183771-20170321-164543-pracovni.xml",
		"/C/Users/HPCZ/Downloads/WebGLMovieTexture (1).unitypackage",
		"/C/xampp/htdocs/bakalarka/theta/theta4.html",
		"/C/xampp/htdocs/bakalarka/theta/theta.html",
		"/C/xampp/htdocs/bakalarka/theta/theta5.html",
		"/C/xampp/htdocs/bakalarka/theta/theta6.html",
		"/C/xampp/htdocs/bakalarka/theta/base/index.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/content.html",
		"/C/xampp/htdocs/bakalarka/theta/pattern-014.jpg",
		"/C/xampp/htdocs/bakalarka/theta/pattern.jpg",
		"/C/xampp/htdocs/bakalarka/pannellum-min2/src/main/main.js",
		"/C/Users/HPCZ/Downloads/student.h",
		"/C/xampp/htdocs/FashionMalls/classes/Form.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminConfigurationController.php",
		"/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/index.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/js/admintopmenu.js",
		"/C/xampp/htdocs/bakalarka/THETA_GL-master/movie_360.html",
		"/C/xampp/htdocs/BC/shaders/fragment/equirectangular.frag",
		"/C/xampp/htdocs/FashionMalls/classes/template/TemplateViaFiles.php",
		"/C/xampp/htdocs/FashionMalls/classes/adapter/template/TemplateAdapter.php",
		"/C/xampp/htdocs/FashionMalls/classes/Tab.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminAccessController.php",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/css/layout.css",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/css/admin_layout.css",
		"/C/xampp/htdocs/FashionMalls/modules/blocktopmenu/views/templates/hook/blocktopmenu.tpl",
		"/C/xampp/htdocs/FashionMalls/modules/blocklogo/views/templates/hook/blocklogo.tpl",
		"/C/xampp/htdocs/FashionMalls/themes/theme1/header.html",
		"/C/xampp/htdocs/BC/shaders/fragment/equirectangular.frag.c",
		"/C/xampp/htdocs/FashionMalls/classes/VirtualModel.php",
		"/C/xampp/htdocs/FashionMalls/classes/Validate.php",
		"/C/xampp/htdocs/FashionMalls/controllers/front/IndexController.php",
		"/C/xampp/htdocs/FashionMalls/classes/controller/Controller.php",
		"/C/xampp/htdocs/FashionMalls/index.php",
		"/C/xampp/htdocs/FashionMalls/controllers/front/pagenotfoundController.php",
		"/C/xampp/htdocs/FashionMalls/controllers/front/TestovaciController.php",
		"/C/xampp/htdocs/FashionMalls/classes/AutoLoad.php",
		"/C/xampp/htdocs/FashionMalls/classes/Context.php",
		"/C/xampp/htdocs/FashionMalls/classes/ActiveRecord.php",
		"/C/xampp/htdocs/bakalarka/panoramaview/vmath.js",
		"/C/xampp/htdocs/bakalarka/theta/T1/PointLightedSphere_perFragment.html",
		"/C/xampp/htdocs/bakalarka/theta/T1/PointLightedSphere_perFragment.js",
		"/C/Users/HPCZ/Downloads/HTML5pano/HTML5pano/html5pano.js",
		"/C/xampp/htdocs/FashionMalls/classes/Access.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminHooksController.php",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/breadcrumb.html",
		"/C/xampp/htdocs/FashionMalls/classes/Link.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminLogoutController.php",
		"/C/xampp/htdocs/FashionMalls/classes/Configuration.php",
		"/C/xampp/htdocs/FashionMalls/controllers/admin/AdminLoginController.php",
		"/C/xampp/htdocs/FashionMalls/admin/index.php",
		"/C/xampp/htdocs/FashionMalls/install/SQL/SQL_tab.sql",
		"/C/xampp/htdocs/FashionMalls/install/SQL/SQL_cms.sql",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/login_content.html",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/css/controllers/login/login_controller.css",
		"/C/xampp/htdocs/FashionMalls/admin/themes/theme1/login_controller.html",
		"/C/xampp/htdocs/FashionMalls/install/SQL/SQL_plugin_file.sql",
		"/C/xampp/htdocs/FashionMalls/install/SQL/SQL_plugin.sql",
		"/C/xampp/htdocs/FashionMalls/classes/Dispatcher.php",
		"/C/Users/HPCZ/Desktop/ims-svoz-odpadu.cpp",
		"/C/Users/HPCZ/Downloads/06_xsluns01_xpokor63/ims-svoz-odpadu.cpp",
		"/C/xampp/htdocs/bakalarka/webgl/tutorial/sylvester.js",
		"/C/xampp/htdocs/bakalarka/webgl/tutorial/sample7/webgl-demo2.js",
		"/C/xampp/htdocs/bakalarka/webgl/tutorial/sample7/index2.html",
		"/C/xampp/htdocs/bakalarka/pannellum-old/src/js/pannellum.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"createCompass",
			"createFieldVision",
			"array",
			"(north_position + angle)",
			"setupProgram",
			"checkIfFileExists",
			"createVide",
			"vmatrix[14]",
			"distance",
			"rotateMatrix",
			"multiply",
			"camera.position.",
			"onDocumentMouseMove",
			"onDocumentMouseWheel",
			"/2 ",
			"vmLoc",
			"degToRad",
			"multiply",
			"mvMatrixUniform",
			"lookAt(",
			"lookAt",
			"vmatrix",
			"view",
			"second",
			"first",
			"mat4.scale",
			"0.0",
			"270.6",
			"r",
			"phi",
			"y",
			"-y",
			" * radius",
			" ",
			"textures",
			"normals",
			"* radius",
			"indices",
			"normalBuffer",
			"__sp__",
			"fieldVisionCoord",
			"getParamByKey(\"fvs\")",
			"getParamByKey(\"fv\")",
			"div",
			"__sp__",
			"\"",
			"sp__",
			"space",
			", ",
			"start",
			"angleInRadians",
			"degToRad",
			"field_vision",
			"100px",
			"append",
			"svg_field_vision",
			".0",
			"0.7",
			"fva_tmp",
			"fv_angle",
			"GET",
			"d(",
			"pmatrix",
			"vmatrix",
			"<path id=\"arc1\" fill=\"none\" stroke=\"#A00\" stroke-width=\"100\" d=\"M 82.07106781186548 67.92893218813452 A 10 10 0 0 0 65 75\"></path>",
			"M 82.07106781186548 67.92893218813452 A 10 10 0 0 0 65 75",
			"field_vision\" style=\"width: 350px; height: 350px; left: 212px; top: 450px; background-color: red; opacity: 0.6; position: absolute; overflow: hidden;",
			"centerY",
			"centerX",
			"mmatrix",
			"compass_",
			"200",
			"body",
			"container",
			"textureCoordData",
			"normalData",
			"sampler",
			"textureBuffer",
			"texture",
			"Texture",
			"texture",
			"Texture",
			"texture",
			"Texture",
			"texture",
			"Texture",
			"texture",
			"Texture",
			"texture",
			"textureCoordData",
			"varyingTexture",
			"samplerLoc",
			"sampler2",
			"DebugThreeStat",
			"textures",
			"video",
			"texture",
			"samplerLoc",
			"0.0",
			"(2.0)",
			"0.7",
			"0.82",
			"87",
			"0.8",
			"1.0",
			"0.99",
			"hookDisplayTop",
			"95",
			"-0.40",
			"0.95",
			"1.3",
			"*(1.12-0.085)",
			"*(0.72-0.06)",
			")*correction",
			"*correction",
			"*(0.7",
			"9",
			"1.5)",
			"1.1",
			"9",
			"1.3",
			"*(0.72-0.06)",
			"(1.12-0.085)",
			"*correction",
			"0.085",
			"32",
			"3",
			"//"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "theta62.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16361,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6427.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "theta.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8335,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 728.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "theta6m.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21509,
						"regions":
						{
						},
						"selection":
						[
							[
								745,
								745
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 196.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/HPCZ/Downloads/treehouse-custom-video-controls (1)/treehouse-custom-video-controls/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 999,
						"regions":
						{
						},
						"selection":
						[
							[
								97,
								97
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/HPCZ/Downloads/treehouse-custom-video-controls (1)/treehouse-custom-video-controls/script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2390,
						"regions":
						{
						},
						"selection":
						[
							[
								441,
								451
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/xampp/htdocs/BC/src/js/lib.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31090,
						"regions":
						{
						},
						"selection":
						[
							[
								23159,
								23159
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 12298.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/xampp/htdocs/BC/doc/tools/txt/PSANI.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 763,
						"regions":
						{
						},
						"selection":
						[
							[
								286,
								286
							]
						],
						"settings":
						{
							"auto_name": "PRAVIDLA PSANI",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1099,
						"regions":
						{
						},
						"selection":
						[
							[
								646,
								646
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 209,
						"regions":
						{
						},
						"selection":
						[
							[
								209,
								209
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1414,
						"regions":
						{
						},
						"selection":
						[
							[
								95,
								95
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4545,
						"regions":
						{
						},
						"selection":
						[
							[
								168,
								168
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "zdroje.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1750,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "ZDROJE:",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "TO_DO.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1592,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 13,
					"file": "/C/xampp/htdocs/BC/shaders/vertext/equirectangular.vert",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 313,
						"regions":
						{
						},
						"selection":
						[
							[
								313,
								312
							]
						],
						"settings":
						{
							"auto_name": "#version 150",
							"syntax": "Packages/C++/C.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/C/xampp/htdocs/BC/shaders/fragment/equirectangular.frag",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6461,
						"regions":
						{
						},
						"selection":
						[
							[
								6461,
								6461
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 179.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15258,
						"regions":
						{
						},
						"selection":
						[
							[
								14863,
								14863
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 492.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/C/xampp/htdocs/bakalarka/pannellum-min2/src/js/panorama.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 58818,
						"regions":
						{
						},
						"selection":
						[
							[
								45669,
								45669
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16249.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/C/xampp/htdocs/bakalarka/theta/gl-matrix-2.2.1.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 110331,
						"regions":
						{
						},
						"selection":
						[
							[
								81183,
								81191
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 43227.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/C/xampp/htdocs/bakalarka/webgl-lessons/lesson14/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18292,
						"regions":
						{
						},
						"selection":
						[
							[
								373,
								373
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 60.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/C/xampp/htdocs/bakalarka/webgl/tutorial/sample8/webgl-demo.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13207,
						"regions":
						{
						},
						"selection":
						[
							[
								6330,
								6330
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5352.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "build/three.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1026130,
						"regions":
						{
						},
						"selection":
						[
							[
								67017,
								67017
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 49989.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/C/xampp/htdocs/bakalarka/webgl-lessons/lesson11/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16422,
						"regions":
						{
						},
						"selection":
						[
							[
								6884,
								6884
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 281.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/C/xampp/htdocs/bakalarka/pannellum-min2/src/js/compass.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1958,
						"regions":
						{
						},
						"selection":
						[
							[
								1804,
								1885
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 201.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/C/xampp/htdocs/bakalarka/pannellum/src/js/pannellum.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 56782,
						"regions":
						{
						},
						"selection":
						[
							[
								3058,
								3069
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 604.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/C/xampp/htdocs/BC/doc/MicrosoftWord/howto_webgl.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11059,
						"regions":
						{
						},
						"selection":
						[
							[
								4418,
								4406
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 98.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/C/xampp/htdocs/bakalarka/webgl/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 76,
						"regions":
						{
						},
						"selection":
						[
							[
								16,
								16
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.859102308894,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 94.0
	},
	"pinned_build_system": "",
	"project": "project.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\thomas\\Downloads\\formbuilder-gh-pages\\formbuilder-gh-pages\\formbuilder.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
